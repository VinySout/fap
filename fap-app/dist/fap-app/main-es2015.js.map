{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/menu-sidebar/menu-sidebar.component.html","./src/app/patient-create/patient-create.component.html","./src/app/patient-details/patient-details.component.html","./src/app/patient-list/patient-list.component.html","./src/app/patient-update/patient-update.component.html","./src/app/scheme/address-create/address-create.component.html","./src/app/scheme/address-update/address-update.component.html","./src/app/scheme/appointment-create/appointment-create.component.html","./src/app/scheme/appointmet-details/appointmet-details.component.html","./src/app/scheme/appointmet-update/appointmet-update.component.html","./src/app/scheme/exams-create/exams-create.component.html","./src/app/scheme/exams-details/exams-details.component.html","./src/app/scheme/exams-update/exams-update.component.html","./src/app/scheme/login/signin/signin.component.html","./src/app/scheme/login/signup/signup.component.html","./src/app/scheme/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/menu-sidebar/menu-sidebar.component.css","./src/app/menu-sidebar/menu-sidebar.component.ts","./src/app/patient-create/patient-create.component.css","./src/app/patient-create/patient-create.component.ts","./src/app/patient-details/patient-details.component.css","./src/app/patient-details/patient-details.component.ts","./src/app/patient-list/patient-list.component.css","./src/app/patient-list/patient-list.component.ts","./src/app/patient-update/patient-update.component.css","./src/app/patient-update/patient-update.component.ts","./src/app/scheme/address-create/address-create.component.css","./src/app/scheme/address-create/address-create.component.ts","./src/app/scheme/address-update/address-update.component.css","./src/app/scheme/address-update/address-update.component.ts","./src/app/scheme/appointment-create/appointment-create.component.css","./src/app/scheme/appointment-create/appointment-create.component.ts","./src/app/scheme/appointmet-details/appointmet-details.component.css","./src/app/scheme/appointmet-details/appointmet-details.component.ts","./src/app/scheme/appointmet-update/appointmet-update.component.css","./src/app/scheme/appointmet-update/appointmet-update.component.ts","./src/app/scheme/exams-create/exams-create.component.css","./src/app/scheme/exams-create/exams-create.component.ts","./src/app/scheme/exams-details/exams-details.component.css","./src/app/scheme/exams-details/exams-details.component.ts","./src/app/scheme/exams-update/exams-update.component.css","./src/app/scheme/exams-update/exams-update.component.ts","./src/app/scheme/login/signin/signin.component.css","./src/app/scheme/login/signin/signin.component.ts","./src/app/scheme/login/signup/signup.component.css","./src/app/scheme/login/signup/signup.component.ts","./src/app/scheme/page-not-found/page-not-found.component.css","./src/app/scheme/page-not-found/page-not-found.component.ts","./src/app/shared/auth/auth.guard.ts","./src/app/shared/auth/authentication.service.ts","./src/app/shared/auth/error.interceptor.ts","./src/app/shared/auth/jwt.interceptor.ts","./src/app/shared/service/address-crud.service.ts","./src/app/shared/service/appointment-crud.service.ts","./src/app/shared/service/exams-crud.service.ts","./src/app/shared/service/rest-api.service.ts","./src/app/shared/service/user-crud.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div id=\\\"page-content-wrapper\\\">\\r\\n    <div *ngIf=\\\"currentUser\\\">\\r\\n        <app-menu-sidebar></app-menu-sidebar>\\r\\n    </div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"<div id=\\\"wrapper\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg custom-btn\\\"(click)=\\\"showModal()\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n        </button>\\r\\n        <div *ngIf=\\\"isModalShown\\\" [config]=\\\"{ show: true }\\\" (onHidden)=\\\"onHidden()\\\" bsModal #autoShownModal=\\\"bs-modal\\\"\\r\\n             class=\\\"modal\\\">\\r\\n                <nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\" id=\\\"sidebar-wrapper\\\">\\r\\n                    <ul class=\\\"nav sidebar-nav\\\">\\r\\n                        <li class=\\\"sidebar-brand\\\">\\r\\n                            <a routerLink=\\\"/pacientes-lista\\\">FapApp</a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            <a routerLink=\\\"/pacientes-lista\\\">Lista de Pacientes</a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            <a routerLink=\\\"/paciente-novo\\\">Adicionar Paciente</a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            <a href=\\\"#\\\">Perfil</a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            <a href=\\\"#\\\">Sobre</a>\\r\\n                        </li>\\r\\n                        <li class=\\\"logout-sidebar\\\">\\r\\n                            <a href=\\\"#\\\" (click)=\\\"logout()\\\">Sair</a>\\r\\n                        </li>\\r\\n                    </ul>   \\r\\n                    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>     \\r\\n                </nav>\\r\\n        </div>\\r\\n            <!-- Sidebar -->\\r\\n</div>\\r\\n\\r\\n<script src=\\\"https://code.jquery.com/jquery-3.3.1.slim.min.js\\\" integrity=\\\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n<script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\" integrity=\\\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <!-- \\r\\n                <li class=\\\"dropdown\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Adicionar<span class=\\\"caret\\\"></span></a>\\r\\n                <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n                    <li class=\\\"dropdown-header\\\">Escolha a Opção</li>\\r\\n                    <li><a routerLink=\\\"/paciente-novo\\\">Paciente</a></li>\\r\\n                </ul>\\r\\n                </li>\\r\\n            -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-lg custom-btn\\\" data-toggle=\\\"offcanvas\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n        </button> \\r\\n    <nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\" id=\\\"sidebar-wrapper\\\" role=\\\"navigation\\\">\\r\\n        <ul class=\\\"nav sidebar-nav\\\">\\r\\n            <li class=\\\"sidebar-brand\\\">\\r\\n                <a routerLink=\\\"/pacientes-lista\\\">FapApp</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a routerLink=\\\"/pacientes-lista\\\">Lista de Pacientes</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a routerLink=\\\"/paciente-novo\\\">Adicionar Paciente</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a href=\\\"#\\\">Perfil</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a href=\\\"#\\\">Sobre</a>\\r\\n            </li>\\r\\n            <li class=\\\"logout-sidebar\\\">\\r\\n                <a  href=\\\"#\\\">Sair</a>\\r\\n            </li>\\r\\n        </ul>        \\r\\n    </nav>\\r\\n    -->\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" >\\r\\n        <h3 class=\\\"md-3 text-center\\\">Adicionar Paciente</h3>\\r\\n        <form #patientForm=\\\"ngForm\\\">\\r\\n            <div *ngIf=\\\"nomePaciente.invalid && (nomePaciente.dirty || nomePaciente.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"nomePaciente.errors.required\\\">\\r\\n                    Preencher campo Nome da Paciente!\\r\\n                </div>\\r\\n                <div *ngIf=\\\"nomePaciente.errors.minlength\\\">\\r\\n                    O Nome da Paciente deve ter no mínimo 10 caracteres.\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"parent.invalid && (parent.dirty || parent.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"parent.errors.required\\\">\\r\\n                        Preencher campo Nome da Mãe ou Pai!\\r\\n                </div>\\r\\n                <div *ngIf=\\\"parent.errors.minlength\\\">\\r\\n                    O Nome da Mãe ou Pai deve ter no mínimo 10 caracteres.\\r\\n                </div>\\r\\n            </div>\\r\\n            <div [hidden]=\\\"idPaciente.valid || idPaciente.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Número do cartão do SUS apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"cpf.valid || cpf.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo CPF apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"identidade.valid || identidade.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Identidade apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"idade.valid || idade.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Idade apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"telefone.valid || telefone.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Telefone apenas com números! Ex.: 99 99999-9999\\r\\n            </div>\\r\\n            <div [hidden]=\\\"estadoCivil.valid || estadoCivil.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Estado Civil!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dum.valid || dum.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo DUM!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dataNasc.valid || dataNasc.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Data de Nascimento!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dpp.valid || dpp.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo DPP!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"altura.valid || altura.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Altura apenas com números em cm! Ex.: 160.0 (É necessário no mínimo 4 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n            </div>\\r\\n            <div [hidden]=\\\"pesgest.valid || pesgest.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Peso apenas com números! Ex.: 60.0 (É necessário no mínimo 3 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"nomePaciente\\\">Nome da Paciente:</label>\\r\\n                <input id=\\\"nomePaciente\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.nomePaciente\\\" name=\\\"nomePaciente\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Nome Completo\\\" required minlength=\\\"10\\\" #nomePaciente=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"parent\\\">Nome da Mãe ou Pai:</label>\\r\\n                <input id=\\\"parent\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.nomeMae\\\" name=\\\"nomeMae\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Nome da Mãe ou Pai da Paciente\\\" required minlength=\\\"10\\\" #parent=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"idPaciente\\\">Número do cartão do SUS:</label>\\r\\n                <input id=\\\"idPaciente\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.idPaciente\\\" name=\\\"idPaciente\\\" maxlength=\\\"15\\\" pattern=\\\"\\\\d{15}\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Número do Cartão do SUS\\\" required #idPaciente=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"cpf\\\">CPF:</label>\\r\\n                <input id=\\\"cpf\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.cpf\\\" name=\\\"cpf\\\" pattern=\\\"\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}-\\\\d{2}\\\"\\r\\n                    OnKeyPress=\\\"formatar('999.999.999-99', this)\\\" maxlength=\\\"14\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"CPF\\\" required #cpf=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"identidade\\\">Identidade:</label>\\r\\n                <input id=\\\"identidade\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.identidade\\\" name=\\\"identidade\\\" maxlength=\\\"9\\\" pattern=\\\"\\\\d{9}\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Identidade\\\" required #identidade=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"idade\\\">Idade:</label>\\r\\n                <input id=\\\"idade\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.idade\\\" name=\\\"idade\\\" maxlength=\\\"2\\\" pattern=\\\"\\\\d{2}\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Idade\\\" required #idade=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"telefone\\\">Telefone:</label>\\r\\n                <input id=\\\"telefone\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.telefone\\\" name=\\\"telefone\\\"  pattern=\\\"\\\\d{2}\\\\ \\\\d{5}\\\\-\\\\d{4}\\\"\\r\\n                    OnKeyPress=\\\"formatar('99 99999-9999', this)\\\" maxlength=\\\"13\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Telefone\\\" required #telefone=\\\"ngModel\\\">\\r\\n            </div>      \\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"estadoCivil\\\">Estado Civil:</label>\\r\\n                <select id=\\\"estadoCivil\\\" [(ngModel)]=\\\"patient.estadoCivil\\\" name=\\\"estadoCivil\\\" \\r\\n                    class=\\\"form-control\\\" required #estadoCivil=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let eCivil of eCivils\\\" [value]=\\\"eCivil\\\">{{eCivil}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"dataNasc\\\">Data de Nascimento:</label>\\r\\n                <input id=\\\"dataNasc\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.dataNasc\\\" name=\\\"dataNasc\\\" \\r\\n                    OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dataNasc=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"dum\\\">DUM:</label>\\r\\n                <input id=\\\"dum\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.dum\\\" name=\\\"dum\\\" \\r\\n                    OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dum=\\\"ngModel\\\">\\r\\n             </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"dpp\\\">DPP:</label>\\r\\n                <input id=\\\"dpp\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.dpp\\\" name=\\\"dpp\\\" \\r\\n                    OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dpp=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"altura\\\">Altura(cm):</label>\\r\\n                <input id=\\\"altura\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.altura\\\" name=\\\"altura\\\" pattern=\\\"\\\\d{3}\\\\.\\\\d+\\\"\\r\\n                maxlength=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Altura da Gestante\\\" required #altura=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"pesgest\\\">Peso:</label>\\r\\n                <input id=\\\"pesgest\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.peso\\\" name=\\\"pesgest\\\" pattern=\\\"\\\\d+\\\\.\\\\d+\\\"\\r\\n                    maxlength=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Peso da gestante\\\" required #pesgest=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"imc\\\">IMC:</label>\\r\\n                <input id=\\\"imc\\\" type=\\\"text\\\" name=\\\"imc\\\" [(ngModel)]=\\\"patient.imc\\\" class=\\\"form-control\\\" placeholder=\\\"Calculo IMC\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n               <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"addPatient()\\\" [disabled]=\\\"!patientForm.form.valid\\\">Adicionar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <!--+++++++     DETALHES DA PACIENTE    ++++++++\\r\\n        ++++++++++++++++++++++++++++++++++++++++++++-->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Detalhes da Paciente</h3>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"nomePaciente\\\">Nome da Paciente:</label>\\r\\n            {{ patient.nomePaciente }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"parent\\\">Nome da Mãe ou Pai:</label>\\r\\n            {{ patient.nomeMae }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"cartaoSus\\\">Número do cartão do SUS:</label>\\r\\n            {{ patient.idPaciente }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"cpf\\\">CPF:</label>\\r\\n            {{ patient.cpf }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"identidade\\\">Identidade:</label>\\r\\n            {{ patient.identidade }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"idade\\\">Idade:</label>\\r\\n            {{ patient.idade }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"tel\\\">Telefone:</label>\\r\\n            {{ patient.telefone }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"eCivil\\\">Estado Civil:</label>\\r\\n            {{ patient.estadoCivil }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"dNasc\\\">Data de Nascimento:</label>\\r\\n            {{ patient.dataNasc | date : \\\"dd/MM/y\\\"}}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"dum\\\">Data da última Mestruação:</label>\\r\\n            {{ patient.dum | date : \\\"dd/MM/y\\\"}}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label for=\\\"dpp\\\">Data Provável do Parto:</label>\\r\\n            {{ patient.dpp | date : \\\"dd/MM/y\\\"}}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label>Altura:</label>\\r\\n            {{ patient.altura }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label>Peso:</label>\\r\\n            {{ patient.peso }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-4\\\">\\r\\n            <label>Imc:</label>\\r\\n            {{ patient.imc }}\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-12 btn-edt-dlt btn-details\\\">\\r\\n            <button class=\\\"btn btn-warning btn-sm\\\" routerLink=\\\"/paciente-editar/{{patient.idPaciente}}\\\">Editar</button>\\r\\n            <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deletePatient(patient.idPaciente)\\\">Deletar</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--++++     FIM DOS DETALHES DA PACIENTE   +++++\\r\\n        +++++++++++++++++++++++++++++++++++++++++++++\\r\\n        +++++++++++        ENDEREÇO        ++++++++++\\r\\n        +++++++++++++++++++++++++++++++++++++++++++++-->\\r\\n    <div class=\\\"col-md-12 div-endereco\\\">\\r\\n        <h3 class=\\\"mb-3 text-center\\\">Endereço</h3>\\r\\n        <div class=\\\"no-data text-center\\\" *ngIf=\\\"patientAddress.length == 0\\\">\\r\\n            <p>Ainda não existe Endereço Cadastrado.</p>\\r\\n            <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/{{patient.idPaciente}}/endereco-novo\\\">Adicionar Endereço</button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"patientAddress.length !== 0\\\">\\r\\n            <table class=\\\"table bordered striped centered highlight responsive-table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\" class=\\\"resp-layout\\\">CEP</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"resp-layout\\\">UF</th>\\r\\n                        <th scope=\\\"col\\\">Cidade</th>\\r\\n                        <th scope=\\\"col\\\" >Bairro</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"resp-layout\\\">Rua</th>\\r\\n                        <th scope=\\\"col\\\" class=\\\"resp-layout\\\">Número</th>\\r\\n                        <th scope=\\\"col\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let address of patientAddress\\\">\\r\\n                        <td class=\\\"resp-layout\\\">{{address.cep}}</td>\\r\\n                        <td class=\\\"resp-layout\\\">{{address.uf}}</td>\\r\\n                        <td>{{address.cidade}}</td>\\r\\n                        <td>{{address.bairro}}</td>\\r\\n                        <td class=\\\"resp-layout\\\">{{address.rua}}</td>\\r\\n                        <td class=\\\"resp-layout\\\">{{address.numero}}</td>\\r\\n                        <td class=\\\"btn-edt-dlt btn-details\\\">\\r\\n                            <button class=\\\"btn btn-warning btn-sm\\\" routerLink=\\\"/{{patient.idPaciente}}/endereco-editar/{{address.idEndereco}}\\\">Editar</button>\\r\\n                            <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteAddress(address.idEndereco)\\\">Deletar</button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--+++++++       FIM DO ENDEREÇO        ++++++++\\r\\n        +++++++++++++++++++++++++++++++++++++++++++++\\r\\n        +++++++           CONSULTAS          ++++++++-->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"mb-3 text-center\\\">Consultas</h3>\\r\\n        <button class=\\\"btn btn-primary\\\" routerLink=\\\"/{{patient.idPaciente}}/consulta-nova\\\">Adicionar Consulta</button>\\r\\n        <div class=\\\"no-data text-center\\\" *ngIf=\\\"patientAptnt.length == 0\\\">\\r\\n            <p>Ainda não existe Consulta Cadastrada.</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"patientAptnt.length !== 0\\\">\\r\\n            <table class=\\\"table bordered striped centered highlight responsive-table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Data</th>\\r\\n                        <th scope=\\\"col\\\">I.G.</th>\\r\\n                        <th scope=\\\"col\\\">Peso</th>\\r\\n                        <th scope=\\\"col\\\">P.A. mmHg</th>\\r\\n                        <th scope=\\\"col\\\">A.U.</th>\\r\\n                        <th scope=\\\"col\\\">BCF</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let appointment of patientAptnt\\\">\\r\\n                        <td>{{appointment.dataConsulta | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                        <td>{{appointment.idadeGestacional}}</td>\\r\\n                        <td>{{appointment.peso}}</td>\\r\\n                        <td>{{appointment.presArterial}}</td>\\r\\n                        <td>{{appointment.alturaUterina}}</td>\\r\\n                        <td>{{appointment.bcf}}</td>\\r\\n                        <td class=\\\"btn-details\\\">\\r\\n                            <button class=\\\"btn btn-info btn-sm\\\" routerLink=\\\"/{{patient.idPaciente}}/consulta-detalhes/{{appointment.idConsulta}}\\\">Detalhes</button>\\r\\n                       </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--++++++++      FIM DAS CONSULTAS     +++++++++\\r\\n        +++++++++++++++++++++++++++++++++++++++++++++\\r\\n        ++++++++          EXAMES            +++++++++-->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"mb-3 text-center\\\">Exames</h3>\\r\\n        <button class=\\\"btn btn-primary\\\" routerLink=\\\"/{{patient.idPaciente}}/exames-novo\\\">Adicionar Exames</button>\\r\\n        <div class=\\\"no-data text-center\\\" *ngIf=\\\"patientExams.length == 0\\\">\\r\\n            <p>Ainda não existe Exames Cadastrado.</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"patientExams.length !== 0\\\">\\r\\n                <table class=\\\"table bordered striped centered highlight responsive-table\\\" *ngFor=\\\"let exams of patientExams\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\"></th>\\r\\n                            <th scope=\\\"col\\\">Hemoglobina</th>\\r\\n                            <th scope=\\\"col\\\">Urina-EAS</th>\\r\\n                            <th scope=\\\"col\\\">Glicose</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Resultado</th>\\r\\n                            <td>{{exams.hemoglobina}}</td>\\r\\n                            <td>{{exams.urinaEas}}</td>\\r\\n                            <td>{{exams.glicemia}}</td>\\r\\n                            <td rowspan=\\\"2\\\" class=\\\"btn-details\\\">\\r\\n                                <button class=\\\"btn btn-info btn-sm\\\" routerLink=\\\"/{{patient.idPaciente}}/exames-detalhes/{{exams.idExames}}\\\">Detalhes</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\">Data</th>\\r\\n                            <td>{{exams.dtHemoglobina | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                            <td>{{exams.dtUrinaEas | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                            <td>{{exams.dtGlicemia | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n    </div>\\r\\n    <!--+++++++        FIM DOS EXAMES          ++++++\\r\\n        +++++++++++++++++++++++++++++++++++++++++++++-->\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <div class=\\\"no-data text-center\\\" *ngIf=\\\"Patient.length == 0\\\">\\r\\n        <p>Ainda não existe Paciente Cadastrado.</p>\\r\\n        <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/paciente-novo\\\">Adicionar Paciente</button>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"Patient.length !== 0\\\">\\r\\n        <h3 class=\\\"mb-3 text-center\\\">Lista de Pacientes</h3>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" routerLink=\\\"/paciente-novo\\\">Adicionar Paciente</button>\\r\\n            <table class=\\\"table bordered striped centered highlight responsive-table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Nº SUS</th>\\r\\n                        <th scope=\\\"col\\\">Nome</th>\\r\\n                        <th scope=\\\"col\\\"class=\\\"resp-layout\\\">Telefone</th>\\r\\n                        <th scope=\\\"col\\\"class=\\\"resp-layout\\\">DUM</th>\\r\\n                        <th scope=\\\"col\\\"class=\\\"resp-layout\\\">DPP</th>\\r\\n                        <th scope=\\\"col\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let patient of Patient\\\">\\r\\n                        <td>{{patient.idPaciente}}</td>\\r\\n                        <td>{{patient.nomePaciente}}</td>\\r\\n                        <td class=\\\"resp-layout\\\">{{patient.telefone}}</td>\\r\\n                        <td class=\\\"resp-layout\\\">{{patient.dum | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                        <td class=\\\"resp-layout\\\">{{patient.dpp | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                        <td>\\r\\n                            <button class=\\\"btn btn-info\\\" routerLink=\\\"/paciente-detalhes/{{patient.idPaciente}}\\\">Detalhes</button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Editar dados do Paciente</h3>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"cartaoSus\\\">Número do cartão do SUS:</label>\\r\\n            {{ patient.idPaciente }}\\r\\n        </div>\\r\\n        <form #patientForm=\\\"ngForm\\\">\\r\\n            <div *ngIf=\\\"nomePaciente.invalid && (nomePaciente.dirty || nomePaciente.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"nomePaciente.errors.required\\\">\\r\\n                    Preencher campo Nome da Paciente!\\r\\n                </div>\\r\\n                <div *ngIf=\\\"nomePaciente.errors.minlength\\\">\\r\\n                    O Nome da Paciente deve ter no mínimo 10 caracteres.\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"parent.invalid && (parent.dirty || parent.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"parent.errors.required\\\">\\r\\n                        Preencher campo Nome da Mãe ou Pai!\\r\\n                </div>\\r\\n                <div *ngIf=\\\"parent.errors.minlength\\\">\\r\\n                    O Nome da Mãe ou Pai deve ter no mínimo 10 caracteres.\\r\\n                </div>\\r\\n            </div>\\r\\n            <div [hidden]=\\\"cpf.valid || cpf.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo CPF apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"identidade.valid || identidade.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Identidade apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"idade.valid || idade.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Idade apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"telefone.valid || telefone.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Telefone apenas com números! Ex.: 99 99999-9999\\r\\n            </div>\\r\\n            <div [hidden]=\\\"estadoCivil.valid || estadoCivil.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Estado Civil!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dum.valid || dum.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo DUM!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dataNasc.valid || dataNasc.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Data de Nascimento!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dpp.valid || dpp.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo DPP!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"altura.valid || altura.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Altura apenas com números em cm! Ex.: 160.0 (É necessário no mínimo 4 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n            </div>\\r\\n            <div [hidden]=\\\"pesgest.valid || pesgest.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Peso apenas com números! Ex.: 60.0 (É necessário no mínimo 3 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"nomePaciente\\\">Nome da Paciente:</label>\\r\\n                <input id=\\\"nomePaciente\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.nomePaciente\\\" name=\\\"nomePaciente\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Nome Completo\\\" required minlength=\\\"10\\\" #nomePaciente=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"parent\\\">Nome da Mãe ou Pai:</label>\\r\\n                <input id=\\\"parent\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.nomeMae\\\" name=\\\"nomeMae\\\" \\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Nome da Mãe ou Pai da Paciente\\\" required minlength=\\\"10\\\" #parent=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"cpf\\\">CPF:</label>\\r\\n                <input id=\\\"cpf\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.cpf\\\" name=\\\"cpf\\\" pattern=\\\"\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}-\\\\d{2}\\\"\\r\\n                    OnKeyPress=\\\"formatar('999.999.999-99', this)\\\" maxlength=\\\"14\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"CPF\\\" required #cpf=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"identidade\\\">Identidade:</label>\\r\\n                <input id=\\\"identidade\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.identidade\\\" name=\\\"identidade\\\" maxlength=\\\"9\\\" pattern=\\\"\\\\d{9}\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Identidade\\\" required #identidade=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"idade\\\">Idade:</label>\\r\\n                <input id=\\\"idade\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.idade\\\" name=\\\"idade\\\" maxlength=\\\"2\\\" pattern=\\\"\\\\d{2}\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Idade\\\" required #idade=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"telefone\\\">Telefone:</label>\\r\\n                <input id=\\\"telefone\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.telefone\\\" name=\\\"telefone\\\"  pattern=\\\"\\\\d{2}\\\\ \\\\d{5}\\\\-\\\\d{4}\\\"\\r\\n                    OnKeyPress=\\\"formatar('99 99999-9999', this)\\\" maxlength=\\\"13\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"Telefone\\\" required #telefone=\\\"ngModel\\\">\\r\\n            </div>      \\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"estadoCivil\\\">Estado Civil:</label>\\r\\n                <select id=\\\"estadoCivil\\\" [(ngModel)]=\\\"patient.estadoCivil\\\" name=\\\"estadoCivil\\\" \\r\\n                    class=\\\"form-control\\\" required #estadoCivil=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let eCivil of eCivils\\\" [value]=\\\"eCivil\\\">{{eCivil}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"dataNasc\\\">Data de Nascimento:</label>\\r\\n                <input id=\\\"dataNasc\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.dataNasc\\\" name=\\\"dataNasc\\\" \\r\\n                    OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dataNasc=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"dum\\\">DUM:</label>\\r\\n                <input id=\\\"dum\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.dum\\\" name=\\\"dum\\\" \\r\\n                    OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dum=\\\"ngModel\\\">\\r\\n             </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"dpp\\\">DPP:</label>\\r\\n                <input id=\\\"dpp\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.dpp\\\" name=\\\"dpp\\\" \\r\\n                    OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\"\\r\\n                    class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dpp=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"altura\\\">Altura:</label>\\r\\n                <input id=\\\"altura\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.altura\\\" name=\\\"altura\\\" pattern=\\\"\\\\d{3}\\\\.\\\\d+\\\"\\r\\n                maxlength=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Altura da Gestante\\\" required #altura=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"pesgest\\\">Peso:</label>\\r\\n                <input id=\\\"pesgest\\\" type=\\\"text\\\" [(ngModel)]=\\\"patient.peso\\\" name=\\\"pesgest\\\" pattern=\\\"\\\\d+\\\\.\\\\d+\\\"\\r\\n                    maxlength=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Peso da gestante\\\" required #pesgest=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"imc\\\">IMC:</label>\\r\\n                <input id=\\\"imc\\\" type=\\\"text\\\" name=\\\"imc\\\" [(ngModel)]=\\\"patient.imc\\\" class=\\\"form-control\\\" placeholder=\\\"Calculo IMC\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n                <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"updatePatient()\\\" [disabled]=\\\"!patientForm.form.valid\\\">Salvar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Adicionar Endereço</h3>\\r\\n        <form #addressForm=\\\"ngForm\\\">\\r\\n            <div [hidden]=\\\"cep.valid || cep.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo CEP apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"uf.valid || uf.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo UF corretamente! Ex.: RN\\r\\n            </div>\\r\\n            <div [hidden]=\\\"cidade.valid || cidade.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Cidade!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"bairro.valid || bairro.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Bairro!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"rua.valid || rua.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Rua!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"numero.valid || numero.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Número!\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"cep\\\">Cep:</label>\\r\\n                <input id=\\\"cep\\\" type=\\\"text\\\" name=\\\"cep\\\" [(ngModel)]=\\\"address.cep\\\" class=\\\"form-control\\\" placeholder=\\\"CEP\\\"\\r\\n                    pattern=\\\"\\\\d{2}\\\\.\\\\d{3}\\\\-\\\\d{3}\\\" OnKeyPress=\\\"formatar('99.999-999', this)\\\" maxlength=\\\"10\\\" required #cep=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"uf\\\">UF:</label>\\r\\n                <select id=\\\"uf\\\" name=\\\"uf\\\" [(ngModel)]=\\\"address.uf\\\" class=\\\"form-control\\\" pattern=\\\"[A-Za-z]{2}\\\" \\r\\n                    maxlength=\\\"2\\\" required #uf=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let uf of ufs\\\" [value]=\\\"uf\\\">{{ uf }}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"cidade\\\">Cidade:</label>\\r\\n                <input id=\\\"cidade\\\" type=\\\"text\\\" name=\\\"cidade\\\" [(ngModel)]=\\\"address.cidade\\\" class=\\\"form-control\\\" placeholder=\\\"Cidade\\\"\\r\\n                    required minlength=\\\"3\\\" #cidade=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"bairro\\\">Bairro:</label>\\r\\n                <input id=\\\"bairro\\\" type=\\\"text\\\" name=\\\"bairro\\\" [(ngModel)]=\\\"address.bairro\\\" class=\\\"form-control\\\" placeholder=\\\"Bairro\\\"\\r\\n                    required minlength=\\\"3\\\" #bairro=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"rua\\\">Rua:</label>\\r\\n                <input id=\\\"rua\\\" type=\\\"text\\\" name=\\\"rua\\\" [(ngModel)]=\\\"address.rua\\\" class=\\\"form-control\\\" placeholder=\\\"Rua\\\"\\r\\n                    required minlength=\\\"3\\\" #rua=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"numero\\\">Número:</label>\\r\\n                <input id=\\\"numero\\\" type=\\\"text\\\" name=\\\"numero\\\" [(ngModel)]=\\\"address.numero\\\" class=\\\"form-control\\\" placeholder=\\\"numero\\\"\\r\\n                    required minlength=\\\"2\\\" maxlength=\\\"4\\\" #numero=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n                <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"addAddress()\\\" [disabled]=\\\"!addressForm.form.valid\\\">Adicionar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Editar Endereço</h3>\\r\\n        <form #addressForm=\\\"ngForm\\\">\\r\\n            <div [hidden]=\\\"cep.valid || cep.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo CEP apenas com números!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"uf.valid || uf.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo UF corretamente! Ex.: RN\\r\\n            </div>\\r\\n            <div [hidden]=\\\"cidade.valid || cidade.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Cidade!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"bairro.valid || bairro.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Bairro!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"rua.valid || rua.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Rua!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"numero.valid || numero.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Número!\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"cep\\\">Cep:</label>\\r\\n                <input id=\\\"cep\\\" type=\\\"text\\\" name=\\\"cep\\\" [(ngModel)]=\\\"address.cep\\\" class=\\\"form-control\\\" placeholder=\\\"CEP\\\"\\r\\n                    pattern=\\\"\\\\d{2}\\\\.\\\\d{3}\\\\-\\\\d{3}\\\" OnKeyPress=\\\"formatar('99.999-999', this)\\\" maxlength=\\\"10\\\" required #cep=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"uf\\\">UF:</label>\\r\\n                <select id=\\\"uf\\\" name=\\\"uf\\\" [(ngModel)]=\\\"address.uf\\\" class=\\\"form-control\\\" pattern=\\\"[A-Za-z]{2}\\\" \\r\\n                    maxlength=\\\"2\\\" required #uf=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let uf of ufs\\\" [value]=\\\"uf\\\">{{ uf }}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"cidade\\\">Cidade:</label>\\r\\n                <input id=\\\"cidade\\\" type=\\\"text\\\" name=\\\"cidade\\\" [(ngModel)]=\\\"address.cidade\\\" class=\\\"form-control\\\" placeholder=\\\"Cidade\\\"\\r\\n                    required minlength=\\\"3\\\" #cidade=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"bairro\\\">Bairro:</label>\\r\\n                <input id=\\\"bairro\\\" type=\\\"text\\\" name=\\\"bairro\\\" [(ngModel)]=\\\"address.bairro\\\" class=\\\"form-control\\\" placeholder=\\\"Bairro\\\"\\r\\n                    required minlength=\\\"3\\\" #bairro=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"rua\\\">Rua:</label>\\r\\n                <input id=\\\"rua\\\" type=\\\"text\\\" name=\\\"rua\\\" [(ngModel)]=\\\"address.rua\\\" class=\\\"form-control\\\" placeholder=\\\"Rua\\\"\\r\\n                    required minlength=\\\"3\\\" #rua=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"numero\\\">Número:</label>\\r\\n                <input id=\\\"numero\\\" type=\\\"text\\\" name=\\\"numero\\\" [(ngModel)]=\\\"address.numero\\\" class=\\\"form-control\\\" placeholder=\\\"numero\\\"\\r\\n                    required minlength=\\\"2\\\" maxlength=\\\"4\\\" #numero=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n                <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"updateAddress()\\\" [disabled]=\\\"!addressForm.form.valid\\\">Salvar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Adicionar Consulta</h3>\\r\\n        <form #appointForm=\\\"ngForm\\\">\\r\\n            <div [hidden]=\\\"dc.valid || dc.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Data da Consulta!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"idadGest.valid || idadGest.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo IG apenas com números! Ex.: 30 (Equivale a quantidade em Semanas)\\r\\n            </div>\\r\\n            <div [hidden]=\\\"pesgest.valid || pesgest.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Peso apenas com números! Ex.: 60.0 (É necessário no mínimo 3 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n            </div>\\r\\n            <div [hidden]=\\\"presArterial.valid || presArterial.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo PA apenas com números! Ex.: 120x80 (O \\\"X\\\" será automaticamente inserido)\\r\\n            </div>\\r\\n            <div [hidden]=\\\"alturaUterina.valid || alturaUterina.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo AU apenas com números! Ex.: 29.9 (É necessário no mínimo 3 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n            </div>\\r\\n            <div [hidden]=\\\"bcf.valid || bcf.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo BCF apenas com números! Ex.: 110 (Quantidade de batimentos por minuto)\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"dc\\\">Data da Consulta:</label>\\r\\n                <input id=\\\"dc\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.dataConsulta\\\" name=\\\"dc\\\" \\r\\n                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\"\\r\\n                [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dc=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"idadGest\\\">I.G.:</label>\\r\\n                <input id=\\\"idadGest\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.idadeGestacional\\\" name=\\\"idadGest\\\" maxlength=\\\"2\\\"\\r\\n                    pattern=\\\"\\\\d{2}\\\" class=\\\"form-control\\\" placeholder=\\\"Idade Gestacional\\\" required #idadGest=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"pesgest\\\">Peso:</label>\\r\\n                <input id=\\\"pesgest\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.peso\\\" name=\\\"pesgest\\\" pattern=\\\"\\\\d+\\\\.\\\\d+\\\"\\r\\n                    maxlength=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Peso da gestante\\\" required #pesgest=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"presArterial\\\">P.A. mmHg:</label>\\r\\n                <input id=\\\"presArterial\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.presArterial\\\" name=\\\"presArterial\\\" pattern=\\\"\\\\d+\\\\x\\\\d+\\\"\\r\\n                    OnKeyPress=\\\"formatar('999x99', this)\\\" maxlength=\\\"7\\\" class=\\\"form-control\\\" placeholder=\\\"Pressão Arterial\\\" required #presArterial=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"alturaUterina\\\">A.U.:</label>\\r\\n                <input id=\\\"alturaUterina\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.alturaUterina\\\" name=\\\"alturaUterina\\\" pattern=\\\"\\\\d+\\\\.\\\\d+\\\"\\r\\n                    class=\\\"form-control\\\" maxlength=\\\"4\\\" placeholder=\\\"Altura Uterina\\\" required #alturaUterina=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"bcf\\\">BCF:</label>\\r\\n                <input id=\\\"bcf\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.bcf\\\" name=\\\"bcf\\\" pattern=\\\"\\\\d+\\\" class=\\\"form-control\\\" \\r\\n                    maxlength=\\\"3\\\" placeholder=\\\"Frequência Cardíaca Fetal\\\" required #bcf=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"apresFetal\\\">Apresentação:</label>\\r\\n                <select id=\\\"apresFetal\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.apresFetal\\\" name=\\\"apresFetal\\\"  \\r\\n                    class=\\\"form-control\\\" required #estadoCivil=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let aFetal of apresFetais\\\" [value]=\\\"aFetal\\\">{{aFetal}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"toque\\\">Toque:</label>\\r\\n                <input id=\\\"toque\\\" type=\\\"text\\\" name=\\\"toque\\\" [(ngModel)]=\\\"appointment.toque\\\" class=\\\"form-control\\\" placeholder=\\\"Toque\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label for=\\\"obs\\\">Intercorrências e Orientações:</label>\\r\\n                <input id=\\\"obs\\\" type=\\\"text\\\" name=\\\"obs\\\" [(ngModel)]=\\\"appointment.obs\\\" class=\\\"form-control\\\" placeholder=\\\"Observações\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n                <label>EDEMA:</label>\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <input class=\\\"form-check-input\\\" name=\\\"edema\\\" [(ngModel)]=\\\"appointment.edema\\\" type=\\\"radio\\\" id=\\\"edemaTrue\\\" value=\\\"Sim\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"edemaTrue\\\">Sim</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <input class=\\\"form-check-input\\\" name=\\\"edema\\\" [(ngModel)]=\\\"appointment.edema\\\" type=\\\"radio\\\" id=\\\"edemaFalse\\\" value=\\\"Não\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"edemaFalse\\\">Não</label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n                <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"addAppointment()\\\" [disabled]=\\\"!appointForm.form.valid\\\">Adicionar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n                <h3 class=\\\"md-3 text-center\\\">Detalhes da Consulta</h3>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>Data da Consulta:</label>\\r\\n                    {{ appointment.dataConsulta | date : \\\"dd/MM/y\\\"}}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>I.G.:</label>\\r\\n                    {{ appointment.idadeGestacional }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>Peso:</label>\\r\\n                    {{ appointment.peso }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>P.A. mmHg:</label>\\r\\n                    {{ appointment.presArterial }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>A.U.:</label>\\r\\n                    {{ appointment.alturaUterina }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>BCF:</label>\\r\\n                    {{ appointment.bcf }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>Edema:</label>\\r\\n                    {{ appointment.edema }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>Apresentação:</label>\\r\\n                    {{ appointment.apresFetal }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>Toque:</label>\\r\\n                    {{ appointment.toque }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-4\\\">\\r\\n                    <label>Intercorrências e Orientações:</label>\\r\\n                    {{ appointment.obs }}\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-12 btn-edt-dlt\\\">\\r\\n                    <button class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"routeEditAptn()\\\">Editar</button>\\r\\n                    <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteAptn(appointment.idConsulta)\\\">Deletar</button>\\r\\n                </div>\\r\\n            </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <h3 class=\\\"md-3 text-center\\\">Atualizar Consulta</h3>\\r\\n            <form #appointForm=\\\"ngForm\\\">\\r\\n                <div [hidden]=\\\"dc.valid || dc.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Preencher campo Data da Consulta!\\r\\n                </div>\\r\\n                <div [hidden]=\\\"idadGest.valid || idadGest.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Preencher campo IG apenas com números! Ex.: 30 (Equivale a quantidade em Semanas)\\r\\n                </div>\\r\\n                <div [hidden]=\\\"pesgest.valid || pesgest.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Preencher campo Peso apenas com números! Ex.: 60.0 (É necessário no mínimo 3 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n                </div>\\r\\n                <div [hidden]=\\\"presArterial.valid || presArterial.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Preencher campo PA apenas com números! Ex.: 120x80 (O \\\"X\\\" será automaticamente inserido)\\r\\n                </div>\\r\\n                <div [hidden]=\\\"alturaUterina.valid || alturaUterina.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Preencher campo AU apenas com números! Ex.: 29.9 (É necessário no mínimo 3 digitos e o caracter separador é o \\\"Ponto Final\\\")\\r\\n                </div>\\r\\n                <div [hidden]=\\\"bcf.valid || bcf.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Preencher campo BCF apenas com números! Ex.: 110 (Quantidade de batimentos por minuto)\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"dc\\\">Data da Consulta:</label>\\r\\n                    <input id=\\\"dc\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.dataConsulta\\\" name=\\\"dc\\\" \\r\\n                    OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\"\\r\\n                    [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dc=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"idadGest\\\">I.G.:</label>\\r\\n                    <input id=\\\"idadGest\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.idadeGestacional\\\" name=\\\"idadGest\\\" maxlength=\\\"2\\\"\\r\\n                        pattern=\\\"\\\\d{2}\\\" class=\\\"form-control\\\" placeholder=\\\"Idade Gestacional\\\" required #idadGest=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"pesgest\\\">Peso:</label>\\r\\n                    <input id=\\\"pesgest\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.peso\\\" name=\\\"pesgest\\\" pattern=\\\"\\\\d+\\\\.\\\\d+\\\"\\r\\n                        maxlength=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Peso da gestante\\\" required #pesgest=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"presArterial\\\">P.A. mmHg:</label>\\r\\n                    <input id=\\\"presArterial\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.presArterial\\\" name=\\\"presArterial\\\" pattern=\\\"\\\\d+\\\\x\\\\d+\\\"\\r\\n                        OnKeyPress=\\\"formatar('999x99', this)\\\" maxlength=\\\"7\\\" class=\\\"form-control\\\" placeholder=\\\"Pressão Arterial\\\" required #presArterial=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"alturaUterina\\\">A.U.:</label>\\r\\n                    <input id=\\\"alturaUterina\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.alturaUterina\\\" name=\\\"alturaUterina\\\" pattern=\\\"\\\\d+\\\\.\\\\d+\\\"\\r\\n                        class=\\\"form-control\\\" maxlength=\\\"4\\\" placeholder=\\\"Altura Uterina\\\" required #alturaUterina=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"bcf\\\">BCF:</label>\\r\\n                    <input id=\\\"bcf\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.bcf\\\" name=\\\"bcf\\\" pattern=\\\"\\\\d+\\\" class=\\\"form-control\\\" \\r\\n                        maxlength=\\\"3\\\" placeholder=\\\"Frequência Cardíaca Fetal\\\" required #bcf=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"apresFetal\\\">Apresentação:</label>\\r\\n                    <select id=\\\"apresFetal\\\" type=\\\"text\\\" [(ngModel)]=\\\"appointment.apresFetal\\\" name=\\\"apresFetal\\\"  \\r\\n                        class=\\\"form-control\\\" required #estadoCivil=\\\"ngModel\\\">\\r\\n                        <option *ngFor=\\\"let aFetal of apresFetais\\\" [value]=\\\"aFetal\\\">{{aFetal}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"toque\\\">Toque:</label>\\r\\n                    <input id=\\\"toque\\\" type=\\\"text\\\" name=\\\"toque\\\" [(ngModel)]=\\\"appointment.toque\\\" class=\\\"form-control\\\" placeholder=\\\"Toque\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"obs\\\">Intercorrências e Orientações:</label>\\r\\n                    <input id=\\\"obs\\\" type=\\\"text\\\" name=\\\"obs\\\" [(ngModel)]=\\\"appointment.obs\\\" class=\\\"form-control\\\" placeholder=\\\"Observações\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label>EDEMA:</label>\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"edema\\\" [(ngModel)]=\\\"appointment.edema\\\" type=\\\"radio\\\" id=\\\"edemaTrue\\\" value=\\\"Sim\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"edemaTrue\\\">Sim</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"edema\\\" [(ngModel)]=\\\"appointment.edema\\\" type=\\\"radio\\\" id=\\\"edemaFalse\\\" value=\\\"Não\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"edemaFalse\\\">Não</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                    <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"updateAptn()\\\" [disabled]=\\\"!appointForm.form.valid\\\">Salvar</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    \"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Adicionar Exames</h3>\\r\\n        <form #examsForm=\\\"ngForm\\\">\\r\\n            <div [hidden]=\\\"hemoglobina.valid || hemoglobina.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Hemoglobina!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dtHemoglobina.valid || dtHemoglobina.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Data Hemoglobina!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"glicemia.valid || glicemia.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo resultado Glicose!\\r\\n            </div> \\r\\n            <div [hidden]=\\\"dtGlicemia.valid || dtGlicemia.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Data Glicose!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"dtUrinaEas.valid || dtUrinaEas.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                Preencher campo Data Urina-EAS!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"urinaEas.valid || urinaEas.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                    Preencher campo resultado Urina-EAS!\\r\\n                </div>\\r\\n            \\r\\n            <table class=\\\"table bordered striped centered highlight responsive-table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Exames</th>\\r\\n                        <th scope=\\\"col\\\">Resultados</th>\\r\\n                        <th scope=\\\"col\\\">Datas</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Hemoglobina</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"hemoglobina\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.hemoglobina\\\" name=\\\"hemoglobina\\\" maxlength=\\\"4\\\"\\r\\n                                class=\\\"form-control\\\" placeholder=\\\"Hemoglobina\\\" required #hemoglobina=\\\"ngModel\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtHemoglobina\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtHemoglobina\\\" name=\\\"dtHemoglobina\\\" \\r\\n                            OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                            class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dtHemoglobina=\\\"ngModel\\\">\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Glicose</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"glicemia\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.glicemia\\\" name=\\\"glicemia\\\" maxlength=\\\"5\\\"\\r\\n                                class=\\\"form-control\\\" placeholder=\\\"Glicemia\\\" required #glicemia=\\\"ngModel\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtGlicemia\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtGlicemia\\\" name=\\\"dtGlicemia\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dtGlicemia=\\\"ngModel\\\">\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Urina-EAS</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"urinaEas\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.urinaEas\\\" name=\\\"urinaEas\\\" class=\\\"form-control\\\" placeholder=\\\"Urina-EAS\\\" required #urinaEas=\\\"ngModel\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtUrinaEas\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtUrinaEas\\\" name=\\\"dtUrinaEas\\\" \\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker required #dtUrinaEas=\\\"ngModel\\\">\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">ABO-RH</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"aboRh\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.aboRh\\\" name=\\\"aboRh\\\" class=\\\"form-control\\\" placeholder=\\\"ABO-RH\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtAboRh\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtAboRh\\\" name=\\\"dtAboRh\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Cit. Oncótica</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"citOncotica\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.citOncotica\\\" name=\\\"citOncotica\\\" class=\\\"form-control\\\" placeholder=\\\"Cit. Oncótica\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtCitOncotica\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtCitOncotica\\\" name=\\\"dtCitOncotica\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Hepatite B e C</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"hepatite\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.hepatite\\\" name=\\\"hepatite\\\" class=\\\"form-control\\\" placeholder=\\\"Hepatite B e C\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtHepatite\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtHepatite\\\" name=\\\"dtHepatite\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Sífilis</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"sifilisTrue\\\">\\r\\n                                    <input name=\\\"sifilis\\\" [(ngModel)]=\\\"exams.sifilis\\\" type=\\\"radio\\\" id=\\\"sifilisTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"sifilisFalse\\\">\\r\\n                                    <input name=\\\"sifilis\\\" [(ngModel)]=\\\"exams.sifilis\\\" type=\\\"radio\\\" id=\\\"sifilisFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"sifilisNull\\\">\\r\\n                                    <input name=\\\"sifilis\\\" [(ngModel)]=\\\"exams.sifilis\\\" type=\\\"radio\\\" id=\\\"sifilisNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtSifilis\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtSifilis\\\" name=\\\"dtSifilis\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">VDRL-HIV</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"vdrlHivTrue\\\">\\r\\n                                    <input name=\\\"vdrlHiv\\\" [(ngModel)]=\\\"exams.vdrlHiv\\\" type=\\\"radio\\\" id=\\\"vdrlHivTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"vdrlHivFalse\\\">\\r\\n                                    <input name=\\\"vdrlHiv\\\" [(ngModel)]=\\\"exams.vdrlHiv\\\" type=\\\"radio\\\" id=\\\"vdrlHivFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"vdrlHivNull\\\">\\r\\n                                    <input name=\\\"vdrlHiv\\\" [(ngModel)]=\\\"exams.vdrlHiv\\\" type=\\\"radio\\\" id=\\\"vdrlHivNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtVdrlHiv\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtVdrlHiv\\\" name=\\\"dtVdrlHiv\\\" \\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Toxoplasmose</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"toxTrue\\\">\\r\\n                                    <input name=\\\"toxoplasmose\\\" [(ngModel)]=\\\"exams.toxoplasmose\\\" type=\\\"radio\\\" id=\\\"toxTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"toxFalse\\\">\\r\\n                                    <input name=\\\"toxoplasmose\\\" [(ngModel)]=\\\"exams.toxoplasmose\\\" type=\\\"radio\\\" id=\\\"toxFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"toxNull\\\">\\r\\n                                    <input name=\\\"toxoplasmose\\\" [(ngModel)]=\\\"exams.toxoplasmose\\\" type=\\\"radio\\\" id=\\\"toxNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtToxopla\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtToxopla\\\" name=\\\"dtToxopla\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Citomegalovirus</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"citomegaTrue\\\">\\r\\n                                    <input name=\\\"citomegalovirus\\\" [(ngModel)]=\\\"exams.citomegalovirus\\\" type=\\\"radio\\\" id=\\\"citomegaTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"citomegaFalse\\\">\\r\\n                                    <input name=\\\"citomegalovirus\\\" [(ngModel)]=\\\"exams.citomegalovirus\\\" type=\\\"radio\\\" id=\\\"citomegaFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"citomegaNull\\\">\\r\\n                                    <input name=\\\"citomegalovirus\\\" [(ngModel)]=\\\"exams.citomegalovirus\\\" type=\\\"radio\\\" id=\\\"citomegaNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtCitomega\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtCitomega\\\" name=\\\"dtCitomega\\\" \\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n                <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"addExams()\\\" [disabled]=\\\"!examsForm.form.valid\\\">Adicionar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n    \"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Detalhes dos Exames</h3>\\r\\n        <table class=\\\"table bordered striped centered highlight responsive-table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Exames</th>\\r\\n                    <th scope=\\\"col\\\">Resultados</th>\\r\\n                    <th scope=\\\"col\\\">Datas</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Hemoglobina</th>\\r\\n                    <td>{{ exams.hemoglobina }}</td>\\r\\n                    <td>{{ exams.dtHemoglobina | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Glicose</th>\\r\\n                    <td>{{ exams.glicemia }}</td>\\r\\n                    <td>{{ exams.dtGlicemia | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Urina-EAS</th>\\r\\n                    <td>{{ exams.urinaEas }}</td>\\r\\n                    <td>{{ exams.dtUrinaEas | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">ABO-RH</th>\\r\\n                    <td>{{ exams.aboRh }}</td>\\r\\n                    <td>{{ exams.dtAboRh | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Cit. Oncótica</th>\\r\\n                    <td>{{ exams.citOncotica }}</td>\\r\\n                    <td>{{ exams.dtCitOncotica | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Hepatite B e C</th>\\r\\n                    <td>{{ exams.hepatite }}</td>\\r\\n                    <td>{{ exams.dtHepatite | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Sífilis</th>\\r\\n                    <td>{{ exams.sifilis }}</td>\\r\\n                    <td>{{ exams.dtSifilis | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">VDRL-HIV</th>\\r\\n                    <td>{{ exams.vdrlHiv }}</td>\\r\\n                    <td>{{ exams.dtVdrlHiv | date : \\\"dd/MM/y\\\" }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Toxoplasmose</th>\\r\\n                    <td>{{ exams.toxoplasmose }}</td>\\r\\n                    <td>{{ exams.dtToxopla | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Citomegalovirus</th>\\r\\n                    <td>{{ exams.citomegalovirus }}</td>\\r\\n                    <td>{{ exams.dtCitomega | date : \\\"dd/MM/y\\\"}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"form-group col-md-12 btn-edt-dlt\\\">\\r\\n            <button class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"routeEditExams()\\\">Editar</button>\\r\\n            <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteExams(exams.idExames)\\\">Deletar</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Editar Exames</h3>\\r\\n        <form #examsForm=\\\"ngForm\\\">\\r\\n            <table class=\\\"table bordered striped centered highlight responsive-table\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Exames</th>\\r\\n                        <th scope=\\\"col\\\">Resultados</th>\\r\\n                        <th scope=\\\"col\\\">Datas</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Hemoglobina</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"hemoglobina\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.hemoglobina\\\" name=\\\"hemoglobina\\\" class=\\\"form-control\\\" placeholder=\\\"Hemoglobina\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtHemoglobina\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtHemoglobina\\\" name=\\\"dtHemoglobina\\\" \\r\\n                            OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                            class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Glicose</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"glicemia\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.glicemia\\\" name=\\\"glicemia\\\" class=\\\"form-control\\\" placeholder=\\\"Glicemia\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtGlicemia\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtGlicemia\\\" name=\\\"dtGlicemia\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Urina-EAS</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"urinaEas\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.urinaEas\\\" name=\\\"urinaEas\\\" class=\\\"form-control\\\" placeholder=\\\"Urina-EAS\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtUrinaEas\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtUrinaEas\\\" name=\\\"dtUrinaEas\\\" \\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">ABO-RH</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"aboRh\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.aboRh\\\" name=\\\"aboRh\\\" class=\\\"form-control\\\" placeholder=\\\"ABO-RH\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtAboRh\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtAboRh\\\" name=\\\"dtAboRh\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Cit. Oncótica</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"citOncotica\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.citOncotica\\\" name=\\\"citOncotica\\\" class=\\\"form-control\\\" placeholder=\\\"Cit. Oncótica\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtCitOncotica\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtCitOncotica\\\" name=\\\"dtCitOncotica\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Hepatite B e C</th>\\r\\n                        <td>\\r\\n                            <input id=\\\"hepatite\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.hepatite\\\" name=\\\"hepatite\\\" class=\\\"form-control\\\" placeholder=\\\"Hepatite B e C\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtHepatite\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtHepatite\\\" name=\\\"dtHepatite\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Sífilis</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"sifilisTrue\\\">\\r\\n                                    <input name=\\\"sifilis\\\" [(ngModel)]=\\\"exams.sifilis\\\" type=\\\"radio\\\" id=\\\"sifilisTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"sifilisFalse\\\">\\r\\n                                    <input name=\\\"sifilis\\\" [(ngModel)]=\\\"exams.sifilis\\\" type=\\\"radio\\\" id=\\\"sifilisFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"sifilisNull\\\">\\r\\n                                    <input name=\\\"sifilis\\\" [(ngModel)]=\\\"exams.sifilis\\\" type=\\\"radio\\\" id=\\\"sifilisNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtSifilis\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtSifilis\\\" name=\\\"dtSifilis\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">VDRL-HIV</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"vdrlHivTrue\\\">\\r\\n                                    <input name=\\\"vdrlHiv\\\" [(ngModel)]=\\\"exams.vdrlHiv\\\" type=\\\"radio\\\" id=\\\"vdrlHivTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"vdrlHivFalse\\\">\\r\\n                                    <input name=\\\"vdrlHiv\\\" [(ngModel)]=\\\"exams.vdrlHiv\\\" type=\\\"radio\\\" id=\\\"vdrlHivFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"vdrlHivNull\\\">\\r\\n                                    <input name=\\\"vdrlHiv\\\" [(ngModel)]=\\\"exams.vdrlHiv\\\" type=\\\"radio\\\" id=\\\"vdrlHivNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtVdrlHiv\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtVdrlHiv\\\" name=\\\"dtVdrlHiv\\\" \\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Toxoplasmose</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"toxTrue\\\">\\r\\n                                    <input name=\\\"toxoplasmose\\\" [(ngModel)]=\\\"exams.toxoplasmose\\\" type=\\\"radio\\\" id=\\\"toxTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"toxFalse\\\">\\r\\n                                    <input name=\\\"toxoplasmose\\\" [(ngModel)]=\\\"exams.toxoplasmose\\\" type=\\\"radio\\\" id=\\\"toxFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"toxNull\\\">\\r\\n                                    <input name=\\\"toxoplasmose\\\" [(ngModel)]=\\\"exams.toxoplasmose\\\" type=\\\"radio\\\" id=\\\"toxNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtToxopla\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtToxopla\\\" name=\\\"dtToxopla\\\"\\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Citomegalovirus</th>\\r\\n                        <td>\\r\\n                            <form>\\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"citomegaTrue\\\">\\r\\n                                    <input name=\\\"citomegalovirus\\\" [(ngModel)]=\\\"exams.citomegalovirus\\\" type=\\\"radio\\\" id=\\\"citomegaTrue\\\" value=\\\"Reagente\\\">\\r\\n                                    Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"citomegaFalse\\\">\\r\\n                                    <input name=\\\"citomegalovirus\\\" [(ngModel)]=\\\"exams.citomegalovirus\\\" type=\\\"radio\\\" id=\\\"citomegaFalse\\\" value=\\\"Não Reagente\\\">\\r\\n                                    Não Reagente</label>\\r\\n                                \\r\\n                                <label class=\\\"radio-inline\\\" for=\\\"citomegaNull\\\">\\r\\n                                    <input name=\\\"citomegalovirus\\\" [(ngModel)]=\\\"exams.citomegalovirus\\\" type=\\\"radio\\\" id=\\\"citomegaNull\\\" value=\\\"\\\">\\r\\n                                    Não Realizado</label>\\r\\n                            </form>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input id=\\\"dtCitomega\\\" type=\\\"text\\\" [(ngModel)]=\\\"exams.dtCitomega\\\" name=\\\"dtCitomega\\\" \\r\\n                                OnKeyPress=\\\"formatar('99/99/9999', this)\\\" maxlength=\\\"10\\\" \\r\\n                                class=\\\"form-control\\\" placeholder=\\\"31/12/2019\\\" [bsConfig]=\\\"datePickerConfig\\\" bsDatepicker>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n                <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"updateExams()\\\" [disabled]=\\\"!examsForm.form.valid\\\">Salvar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h2 class=\\\"md-3 text-center\\\">FapApp</h2>\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n            <div *ngIf=\\\"submitted && f.usernameOrEmail.errors\\\">\\r\\n                <div *ngIf=\\\"f.usernameOrEmail.errors.required\\\" class=\\\"alert alert-warning input-login\\\">É necessário inserir username ou E-mail para proceguir.</div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"submitted && f.password.errors\\\">\\r\\n                <div *ngIf=\\\"f.password.errors.required\\\" class=\\\"alert alert-warning input-login\\\">É necessário senha para proceguir.</div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger input-login\\\">{{error}}</div>\\r\\n\\r\\n            <div class=\\\"form-group input-login\\\">\\r\\n                <label for=\\\"usernameOrEmail\\\">Username ou E-Mail</label>\\r\\n                <input type=\\\"text\\\" id=\\\"usernameOrEmail\\\" formControlName=\\\"usernameOrEmail\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.usernameOrEmail.errors }\\\" />\\r\\n              </div>\\r\\n            <div class=\\\"form-group input-login\\\">\\r\\n                <label for=\\\"password\\\">Senha</label>\\r\\n                <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"input-login\\\">\\r\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\r\\n                    Login\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-info btn-cadastro\\\" routerLink=\\\"/signup\\\">\\r\\n                    Cadastre-se\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3 class=\\\"md-3 text-center\\\">Cadastre-se</h3>\\r\\n        <form #signupForm=\\\"ngForm\\\">\\r\\n            <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-warning input-signup\\\">\\r\\n                Preencher campo 'Nome completo' corretamente!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"username.valid || username.pristine\\\" class=\\\"alert alert-warning input-signup\\\">\\r\\n                Preencher campo 'Nome para Login' corretamente!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-warning input-signup\\\">\\r\\n                Preencher campo 'E-mail' corretamente!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-warning input-signup\\\">\\r\\n                O campo 'Senha' deve ser preenchido: O tamanho tem que está entre 6 e 20 caracteres!\\r\\n            </div>\\r\\n            <div [hidden]=\\\"confirmPassword.valid || confirmPassword.pristine\\\" class=\\\"alert alert-warning input-signup\\\">\\r\\n                Preencher campo 'Confirmação de Senha' corretamente!\\r\\n            </div>\\r\\n            <div *ngIf=\\\"erroSenha\\\"  class=\\\"alert alert-warning input-signup\\\">{{erroSenha}}</div>\\r\\n            <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger input-signup\\\">{{error}}</div>\\r\\n            <div *ngIf=\\\"sucesso\\\" class=\\\"alert alert-success input-signup\\\">{{sucesso}}</div>\\r\\n\\r\\n            <div class=\\\"form-group input-signup\\\">\\r\\n                <label for=\\\"name\\\">Nome Completo:</label>\\r\\n                <input id=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\" \\r\\n                maxlength=\\\"40\\\" class=\\\"form-control\\\" required #name=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group input-signup\\\">\\r\\n                <label for=\\\"username\\\">Nome para login:</label>\\r\\n                <input id=\\\"username\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" \\r\\n                maxlength=\\\"15\\\" class=\\\"form-control\\\" required #username=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group input-signup\\\">\\r\\n                <label for=\\\"email\\\">E-Mail:</label>\\r\\n                <input id=\\\"email\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" maxlength=\\\"40\\\" class=\\\"form-control\\\" required #email=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group input-signup\\\">\\r\\n                <label for=\\\"password\\\">Senha:</label>\\r\\n                <input id=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" \\r\\n                maxlength=\\\"20\\\" minlength=\\\"6\\\" class=\\\"form-control\\\" required #password=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group input-signup\\\">\\r\\n                <label for=\\\"confirmPassword\\\">Confirmar Senha:</label>\\r\\n                <input id=\\\"confirmPassword\\\" type=\\\"password\\\" [(ngModel)]=\\\"user.confirmPassword\\\" name=\\\"confirmPassword\\\" \\r\\n                maxlength=\\\"20\\\" minlength=\\\"6\\\" class=\\\"form-control\\\" required #confirmPassword=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <div class=\\\" input-signup\\\">\\r\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"validaSenha()\\\" [disabled]=\\\"!signupForm.form.valid\\\">Cadastrar</button>\\r\\n                <button class=\\\"btn btn-primary\\\" routerLink=\\\"/login\\\">Login</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n        <h2>Página não encontrada!</h2>\\r\\n        <button class=\\\"btn btn-info\\\" routerLink=\\\"/pacientes-lista\\\">Página Principal</button>\\r\\n    </div>\\r\\n</div>\"","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PatientCreateComponent } from './patient-create/patient-create.component';\r\nimport { PatientDetailsComponent } from './patient-details/patient-details.component';\r\nimport { PatientListComponent } from './patient-list/patient-list.component';\r\nimport { PatientUpdateComponent } from './patient-update/patient-update.component';\r\nimport { AddressCreateComponent } from './scheme/address-create/address-create.component';\r\nimport { AddressUpdateComponent } from './scheme/address-update/address-update.component';\r\nimport { AppointmentCreateComponent } from './scheme/appointment-create/appointment-create.component';\r\nimport { AppointmetDetailsComponent } from './scheme/appointmet-details/appointmet-details.component';\r\nimport { AppointmetUpdateComponent } from './scheme/appointmet-update/appointmet-update.component';\r\nimport { PageNotFoundComponent } from './scheme/page-not-found/page-not-found.component';\r\nimport { ExamsCreateComponent } from './scheme/exams-create/exams-create.component';\r\nimport { ExamsUpdateComponent } from './scheme/exams-update/exams-update.component';\r\nimport { ExamsDetailsComponent } from './scheme/exams-details/exams-details.component';\r\nimport { SignupComponent } from './scheme/login/signup/signup.component';\r\nimport { SigninComponent } from './scheme/login/signin/signin.component';\r\nimport { AuthGuard } from './shared/auth/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full' , redirectTo: 'pacientes-lista' },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'login', component: SigninComponent },\r\n  { path: 'paciente-novo', component: PatientCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'paciente-detalhes/:id', component: PatientDetailsComponent, canActivate: [AuthGuard] },\r\n  { path: 'pacientes-lista', component: PatientListComponent, canActivate: [AuthGuard] } ,\r\n  { path: 'paciente-editar/:id', component: PatientUpdateComponent, canActivate: [AuthGuard] },\r\n  { path: ':id/endereco-novo', component:  AddressCreateComponent, canActivate: [AuthGuard]  },\r\n  { path: ':id1/endereco-editar/:id2', component: AddressUpdateComponent, canActivate: [AuthGuard]  },\r\n  { path: ':id/consulta-nova', component: AppointmentCreateComponent, canActivate: [AuthGuard]  },\r\n  { path: ':id1/consulta-detalhes/:id2', component: AppointmetDetailsComponent, canActivate: [AuthGuard]  },\r\n  { path: ':id1/consulta-editar/:id2', component: AppointmetUpdateComponent, canActivate: [AuthGuard]  },\r\n  { path: ':id/exames-novo' , component: ExamsCreateComponent, canActivate: [AuthGuard]  },\r\n  { path: ':id1/exames-editar/:id2', component: ExamsUpdateComponent, canActivate: [AuthGuard]  },\r\n  { path: ':id1/exames-detalhes/:id2', component: ExamsDetailsComponent, canActivate: [AuthGuard]  },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from './shared/auth/authentication.service';\r\nimport { UserLogin } from './shared/model/user-login';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {  \r\n  currentUser: UserLogin;\r\n  title = 'fap-app';\r\n\r\n  constructor(private router: Router,\r\n    private authenticationService: AuthenticationService){\r\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PatientCreateComponent } from './patient-create/patient-create.component';\r\nimport { PatientDetailsComponent } from './patient-details/patient-details.component';\r\nimport { PatientUpdateComponent } from './patient-update/patient-update.component';\r\nimport { PatientListComponent } from './patient-list/patient-list.component';\r\nimport { MenuSidebarComponent } from './menu-sidebar/menu-sidebar.component';\r\nimport { AddressCreateComponent } from './scheme/address-create/address-create.component';\r\nimport { AddressUpdateComponent } from './scheme/address-update/address-update.component';\r\nimport { AppointmentCreateComponent } from './scheme/appointment-create/appointment-create.component';\r\nimport { AppointmetDetailsComponent } from './scheme/appointmet-details/appointmet-details.component';\r\nimport { AppointmetUpdateComponent } from './scheme/appointmet-update/appointmet-update.component';\r\nimport { PageNotFoundComponent } from './scheme/page-not-found/page-not-found.component';\r\nimport { ExamsCreateComponent } from './scheme/exams-create/exams-create.component';\r\nimport { ExamsDetailsComponent } from './scheme/exams-details/exams-details.component';\r\nimport { ExamsUpdateComponent } from './scheme/exams-update/exams-update.component';\r\nimport { SigninComponent } from './scheme/login/signin/signin.component';\r\nimport { SignupComponent } from './scheme/login/signup/signup.component';\r\nimport { JwtInterceptor } from './shared/auth/jwt.interceptor';\r\nimport { ErrorInterceptor } from './shared/auth/error.interceptor';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PatientCreateComponent,\r\n    PatientDetailsComponent,\r\n    PatientUpdateComponent,\r\n    PatientListComponent,\r\n    MenuSidebarComponent,\r\n    AddressCreateComponent,\r\n    AddressUpdateComponent,\r\n    AppointmentCreateComponent,\r\n    AppointmetDetailsComponent,\r\n    AppointmetUpdateComponent,\r\n    PageNotFoundComponent,\r\n    ExamsCreateComponent,\r\n    ExamsDetailsComponent,\r\n    ExamsUpdateComponent,\r\n    SigninComponent,\r\n    SignupComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"#sidebar-wrapper {\\r\\n    left: 220px;\\r\\n    width: 220px;\\r\\n    height: 100%;\\r\\n    margin-left: -220px;\\r\\n    transition: all 0.5s ease;\\r\\n}\\r\\n#sidebar-wrapper::-webkit-scrollbar {\\r\\n  display: none;\\r\\n}\\r\\n.sidebar-nav {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    width: 220px;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    list-style: none;\\r\\n}\\r\\n.sidebar-nav li {\\r\\n    position: relative; \\r\\n    line-height: 20px;\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n}\\r\\n.sidebar-nav li:before {\\r\\n    content: '';\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    z-index: -1;\\r\\n    height: 100%;\\r\\n    width: 3px;\\r\\n    transition: width .2s ease-in;\\r\\n}\\r\\n.sidebar-nav li:first-child a{\\r\\n\\tcolor: white;\\r\\n}\\r\\n.sidebar-nav li:nth-child(2):before{\\r\\n    background-color: #87CEFA;\\r\\n}\\r\\n.sidebar-nav li:nth-child(3):before{\\r\\n\\tbackground-color: #46b8da;\\r\\n}\\r\\n.sidebar-nav li:nth-child(4):before{\\r\\n\\tbackground-color: #337ab7;\\r\\n}\\r\\n.sidebar-nav li:nth-child(5):before{\\r\\n\\tbackground-color: #191970;\\r\\n}\\r\\n.sidebar-nav li:nth-child(6):before{\\r\\n\\tbackground-color: #B34048;\\r\\n}\\r\\n.sidebar-nav li:nth-child(7):before{\\r\\n\\tbackground-color: #B34048;\\r\\n}\\r\\n.sidebar-nav li:nth-child(8):before{\\r\\n\\tbackground-color: #0A3FA3;\\r\\n}\\r\\n.sidebar-nav li:nth-child(9):before{\\r\\n\\tbackground-color: #35acdf;\\r\\n}\\r\\n.sidebar-nav li:hover:before,\\r\\n.sidebar-nav li.open:hover:before{\\r\\n\\twidth: 100%;\\r\\n transition: width .2s ease-in;\\r\\n}\\r\\n.sidebar-nav li a{\\r\\n\\tdisplay: block;\\r\\n\\tcolor: #fff;\\r\\n\\ttext-decoration: none;\\r\\n\\tpadding: 10px 15px 10px 30px;\\r\\n}\\r\\n.sidebar-nav li a:hover,\\r\\n.sidebar-nav li a:active,\\r\\n.sidebar-nav li a:focus,\\r\\n.sidebar-nav li.open a:hover,\\r\\n.sidebar-nav li.open a:active,\\r\\n.sidebar-nav li.open a:focus{\\r\\n\\tcolor: #DCDCDC;\\r\\n\\ttext-decoration: none;\\r\\n\\tbackground-color: transparent;\\r\\n}\\r\\n.sidebar-nav > .sidebar-brand{\\r\\n\\theight: 70px;\\r\\n\\tfont-size: 22px;\\r\\n\\tline-height: 46px;\\t\\r\\n}\\r\\n.sidebar-nav .dropdown-menu{\\r\\n\\tposition: relative;\\r\\n\\twidth: 100%;\\r\\n\\tpadding: 0;\\r\\n\\tmargin: 0;\\r\\n\\tborder-radius: 0;\\r\\n\\tborder:none;\\r\\n\\tbackground-color: dimgray;\\r\\n\\tbox-shadow: none;\\r\\n}\\r\\n.custom-btn{\\r\\n\\tmargin-left: 15px;\\r\\n\\tcolor: white;\\r\\n    background-color: dimgray;\\r\\n    position: fixed;\\r\\n    z-index: 1;\\r\\n}\\r\\n.custom-btn:hover{\\r\\n\\tmargin-left: 15px;\\r\\n\\tcolor: #e77878;\\r\\n    background-color: black;\\r\\n    position: fixed;\\r\\n}\\r\\n.logout-sidebar{\\r\\n    margin-top: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1zaWRlYmFyL21lbnUtc2lkZWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixZQUFZO0lBQ1osbUJBQW1CO0lBSW5CLHlCQUF5QjtBQUM3QjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLFlBQVk7SUFDWixTQUFTO0lBQ1QsVUFBVTtJQUNWLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsV0FBVztBQUNmO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixVQUFVO0lBSUYsNkJBQTZCO0FBQ3pDO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtJQUNJLHlCQUF5QjtBQUM3QjtBQUNBO0NBQ0MseUJBQXlCO0FBQzFCO0FBQ0E7Q0FDQyx5QkFBeUI7QUFDMUI7QUFDQTtDQUNDLHlCQUF5QjtBQUMxQjtBQUNBO0NBQ0MseUJBQXlCO0FBQzFCO0FBQ0E7Q0FDQyx5QkFBeUI7QUFDMUI7QUFDQTtDQUNDLHlCQUF5QjtBQUMxQjtBQUNBO0NBQ0MseUJBQXlCO0FBQzFCO0FBQ0E7O0NBRUMsV0FBVztDQUlBLDZCQUE2QjtBQUN6QztBQUNBO0NBQ0MsY0FBYztDQUNkLFdBQVc7Q0FDWCxxQkFBcUI7Q0FDckIsNEJBQTRCO0FBQzdCO0FBQ0E7Ozs7OztDQU1DLGNBQWM7Q0FDZCxxQkFBcUI7Q0FDckIsNkJBQTZCO0FBQzlCO0FBQ0E7Q0FDQyxZQUFZO0NBQ1osZUFBZTtDQUNmLGlCQUFpQjtBQUNsQjtBQUNBO0NBQ0Msa0JBQWtCO0NBQ2xCLFdBQVc7Q0FDWCxVQUFVO0NBQ1YsU0FBUztDQUNULGdCQUFnQjtDQUNoQixXQUFXO0NBQ1gseUJBQXlCO0NBQ3pCLGdCQUFnQjtBQUNqQjtBQUNBO0NBQ0MsaUJBQWlCO0NBQ2pCLFlBQVk7SUFDVCx5QkFBeUI7SUFDekIsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUNBO0NBQ0MsaUJBQWlCO0NBQ2pCLGNBQWM7SUFDWCx1QkFBdUI7SUFDdkIsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbWVudS1zaWRlYmFyL21lbnUtc2lkZWJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3NpZGViYXItd3JhcHBlciB7XHJcbiAgICBsZWZ0OiAyMjBweDtcclxuICAgIHdpZHRoOiAyMjBweDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMjIwcHg7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7XHJcbiAgICAtby10cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZTtcclxufVxyXG4jc2lkZWJhci13cmFwcGVyOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4uc2lkZWJhci1uYXYge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgd2lkdGg6IDIyMHB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuLnNpZGViYXItbmF2IGxpIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgXHJcbiAgICBsaW5lLWhlaWdodDogMjBweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5zaWRlYmFyLW5hdiBsaTpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogM3B4O1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiB3aWR0aCAuMnMgZWFzZS1pbjtcclxuICAgICAgLW1vei10cmFuc2l0aW9uOiAgd2lkdGggLjJzIGVhc2UtaW47XHJcbiAgICAgICAtbXMtdHJhbnNpdGlvbjogIHdpZHRoIC4ycyBlYXNlLWluO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAuMnMgZWFzZS1pbjtcclxufVxyXG4uc2lkZWJhci1uYXYgbGk6Zmlyc3QtY2hpbGQgYXtcclxuXHRjb2xvcjogd2hpdGU7XHJcbn1cclxuLnNpZGViYXItbmF2IGxpOm50aC1jaGlsZCgyKTpiZWZvcmV7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODdDRUZBO1xyXG59XHJcbi5zaWRlYmFyLW5hdiBsaTpudGgtY2hpbGQoMyk6YmVmb3Jle1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICM0NmI4ZGE7XHJcbn1cclxuLnNpZGViYXItbmF2IGxpOm50aC1jaGlsZCg0KTpiZWZvcmV7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogIzMzN2FiNztcclxufVxyXG4uc2lkZWJhci1uYXYgbGk6bnRoLWNoaWxkKDUpOmJlZm9yZXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMTkxOTcwO1xyXG59XHJcbi5zaWRlYmFyLW5hdiBsaTpudGgtY2hpbGQoNik6YmVmb3Jle1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNCMzQwNDg7XHJcbn1cclxuLnNpZGViYXItbmF2IGxpOm50aC1jaGlsZCg3KTpiZWZvcmV7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI0IzNDA0ODtcclxufVxyXG4uc2lkZWJhci1uYXYgbGk6bnRoLWNoaWxkKDgpOmJlZm9yZXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMEEzRkEzO1xyXG59XHJcbi5zaWRlYmFyLW5hdiBsaTpudGgtY2hpbGQoOSk6YmVmb3Jle1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICMzNWFjZGY7XHJcbn1cclxuLnNpZGViYXItbmF2IGxpOmhvdmVyOmJlZm9yZSxcclxuLnNpZGViYXItbmF2IGxpLm9wZW46aG92ZXI6YmVmb3Jle1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggLjJzIGVhc2UtaW47XHJcbiAgICAgIC1tb3otdHJhbnNpdGlvbjogIHdpZHRoIC4ycyBlYXNlLWluO1xyXG4gICAgICAgLW1zLXRyYW5zaXRpb246ICB3aWR0aCAuMnMgZWFzZS1pbjtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggLjJzIGVhc2UtaW47XHJcbn1cclxuLnNpZGViYXItbmF2IGxpIGF7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0Y29sb3I6ICNmZmY7XHJcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdHBhZGRpbmc6IDEwcHggMTVweCAxMHB4IDMwcHg7XHJcbn1cclxuLnNpZGViYXItbmF2IGxpIGE6aG92ZXIsXHJcbi5zaWRlYmFyLW5hdiBsaSBhOmFjdGl2ZSxcclxuLnNpZGViYXItbmF2IGxpIGE6Zm9jdXMsXHJcbi5zaWRlYmFyLW5hdiBsaS5vcGVuIGE6aG92ZXIsXHJcbi5zaWRlYmFyLW5hdiBsaS5vcGVuIGE6YWN0aXZlLFxyXG4uc2lkZWJhci1uYXYgbGkub3BlbiBhOmZvY3Vze1xyXG5cdGNvbG9yOiAjRENEQ0RDO1xyXG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG4uc2lkZWJhci1uYXYgPiAuc2lkZWJhci1icmFuZHtcclxuXHRoZWlnaHQ6IDcwcHg7XHJcblx0Zm9udC1zaXplOiAyMnB4O1xyXG5cdGxpbmUtaGVpZ2h0OiA0NnB4O1x0XHJcbn1cclxuLnNpZGViYXItbmF2IC5kcm9wZG93bi1tZW51e1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdG1hcmdpbjogMDtcclxuXHRib3JkZXItcmFkaXVzOiAwO1xyXG5cdGJvcmRlcjpub25lO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IGRpbWdyYXk7XHJcblx0Ym94LXNoYWRvdzogbm9uZTtcclxufVxyXG4uY3VzdG9tLWJ0bntcclxuXHRtYXJnaW4tbGVmdDogMTVweDtcclxuXHRjb2xvcjogd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkaW1ncmF5O1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgei1pbmRleDogMTtcclxufVxyXG4uY3VzdG9tLWJ0bjpob3ZlcntcclxuXHRtYXJnaW4tbGVmdDogMTVweDtcclxuXHRjb2xvcjogI2U3Nzg3ODtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG59XHJcbi5sb2dvdXQtc2lkZWJhcntcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild  } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserLogin } from '../shared/model/user-login';\r\n\r\nimport { AuthenticationService } from '../shared/auth/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-sidebar',\r\n  templateUrl: './menu-sidebar.component.html',\r\n  styleUrls: ['./menu-sidebar.component.css']\r\n})\r\nexport class MenuSidebarComponent implements OnInit {\r\n\r\n  currentUser: UserLogin;\r\n  constructor(private router: Router,\r\n    private authenticationService: AuthenticationService){\r\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n    }\r\n   ngOnInit() {\r\n  }\r\n  \r\n  @ViewChild('autoShownModal', { static: false }) autoShownModal: ModalDirective;\r\n  isModalShown = false;\r\n \r\n  showModal(): void {\r\n    this.isModalShown = true;\r\n  }\r\n \r\n  hideModal(): void {\r\n    this.autoShownModal.hide();\r\n  }\r\n \r\n  onHidden(): void {\r\n    this.isModalShown = false;\r\n  }\r\n  logout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n}\r\n}\r\n","module.exports = \"\\r\\n  \\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQtY3JlYXRlL3BhdGllbnQtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RestApiService } from '../shared/service/rest-api.service';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale); \r\n\r\n@Component({\r\n  selector: 'app-patient-create',\r\n  templateUrl: './patient-create.component.html',\r\n  styleUrls: ['./patient-create.component.css']\r\n})\r\nexport class PatientCreateComponent implements OnInit {\r\n\r\n  datePickerConfig: Partial<BsDatepickerConfig>;\r\n\r\n  @Input() patient = {\r\n    cpf: '',\r\n    identidade: '',\r\n    idade: '',\r\n    telefone: '',\r\n    nomePaciente: '',\r\n    nomeMae: '',\r\n    estadoCivil: '',\r\n    dataNasc: '',\r\n    dum: '',\r\n    dpp: '',\r\n    altura: '',\r\n    peso: '',\r\n    imc: ''\r\n  }\r\n  eCivils = ['casada', 'divorciada', 'solteira','separada','viúva'];\r\n\r\n  constructor(public restApi: RestApiService, public router: Router,\r\n              private localeService: BsLocaleService) {\r\n              this.localeService.use('pt-br');\r\n              this.datePickerConfig = Object.assign({},{\r\n                  containerClass:'theme-dark-blue',\r\n                  showWeekNumbers: false,\r\n                  adaptivePosition: true\r\n                });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  addPatient(){\r\n    this.restApi.createPatient(this.patient).subscribe((data: {}) => {\r\n      this.router.navigate(['/pacientes-lista'])\r\n    })\r\n  }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \"@media only screen and (max-width: 415px) {\\r\\n    .resp-layout {display: none;\\r\\n     }\\r\\n     .container{\\r\\n       width: 450px;\\r\\n       margin: 0 auto;\\r\\n     }\\r\\n  }\\r\\n  .btn-details{\\r\\n    text-align: right;\\r\\n  }\\r\\n  .btn-edt-dlt button{\\r\\n    width: 60px;\\r\\n    margin: 5px 5px;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC1kZXRhaWxzL3BhdGllbnQtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYyxhQUFhO0tBQzFCO0tBQ0E7T0FDRSxZQUFZO09BQ1osY0FBYztLQUNoQjtFQUNIO0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLFdBQVc7SUFDWCxlQUFlO0VBQ2pCIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC1kZXRhaWxzL3BhdGllbnQtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MTVweCkge1xyXG4gICAgLnJlc3AtbGF5b3V0IHtkaXNwbGF5OiBub25lO1xyXG4gICAgIH1cclxuICAgICAuY29udGFpbmVye1xyXG4gICAgICAgd2lkdGg6IDQ1MHB4O1xyXG4gICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgfVxyXG4gIH1cclxuICAuYnRuLWRldGFpbHN7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB9XHJcbiAgLmJ0bi1lZHQtZGx0IGJ1dHRvbntcclxuICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgbWFyZ2luOiA1cHggNXB4O1xyXG4gIH1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RestApiService } from '../shared/service/rest-api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AddressCrudService } from '../shared/service/address-crud.service';\r\nimport { AppointmentCrudService } from '../shared/service/appointment-crud.service';\r\nimport { ExamsCrudService } from '../shared/service/exams-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-details',\r\n  templateUrl: './patient-details.component.html',\r\n  styleUrls: ['./patient-details.component.css']\r\n})\r\nexport class PatientDetailsComponent implements OnInit {\r\n\r\n  patientId = this.actRoute.snapshot.params['id'];\r\n  patient: any = {};\r\n  patientAddress: any = [];\r\n  patientAptnt: any = [];\r\n  patientExams: any = [];\r\n  error = '';\r\n\r\n  constructor(\r\n    public restApi: RestApiService,\r\n    public enderecoCrud: AddressCrudService,\r\n    public appointmentCrud: AppointmentCrudService,\r\n    public examsCrud: ExamsCrudService,\r\n    public actRoute: ActivatedRoute,\r\n    public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.restApi.getPatient(this.patientId).subscribe((data: {}) => {\r\n      this.patient = data;\r\n    });\r\n    this.appointmentCrud.getAppointments(this.patientId).subscribe((data: {}) => {\r\n      this.patientAptnt = data;\r\n    });\r\n    this.loadAddress();\r\n    this.loadExams();\r\n  }\r\n  loadAddress(){\r\n    this.enderecoCrud.getAddresses(this.patientId).subscribe((data: {}) => {\r\n      this.patientAddress = data;\r\n    })\r\n  }\r\n  loadExams(){\r\n    this.examsCrud.getExams(this.patientId).subscribe((data: {}) => {\r\n      this.patientExams = data;\r\n    })\r\n  }\r\n  deletePatient(patientId){\r\n    if(window.confirm(\"Você tem certeza que deseja deletar este Paciente!?\")){\r\n      this.restApi.deletePatient(patientId).subscribe(data => {\r\n        this.router.navigate(['/pacientes-lista'])\r\n      })\r\n    }\r\n  }  \r\n  deleteAddress(addressId){\r\n    if(window.confirm(\"Você tem certeza que deseja deletar este Endereço!?\")){\r\n      this.enderecoCrud.deleteAddress(this.patientId, addressId).subscribe(data => {\r\n        this.loadAddress()\r\n      }, \r\n      error => {\r\n        this.error = error;\r\n        alert(error);\r\n      })\r\n    }\r\n  }\r\n}\r\n","module.exports = \"@media only screen and (max-width: 415px) {\\r\\n    .resp-layout {display: none;\\r\\n    }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudC1saXN0L3BhdGllbnQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYyxhQUFhO0lBQzNCO0VBQ0YiLCJmaWxlIjoic3JjL2FwcC9wYXRpZW50LWxpc3QvcGF0aWVudC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQxNXB4KSB7XHJcbiAgICAucmVzcC1sYXlvdXQge2Rpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RestApiService } from '../shared/service/rest-api.service';\r\n\r\n@Component({\r\n  selector: 'app-patient-list',\r\n  templateUrl: './patient-list.component.html',\r\n  styleUrls: ['./patient-list.component.css']\r\n})\r\nexport class PatientListComponent implements OnInit {\r\n\r\n  Patient: any = [];\r\n\r\n  constructor(\r\n    public restApi: RestApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadPatients()\r\n  }\r\n  loadPatients(){\r\n    return this.restApi.getPatients().subscribe((data: {}) => {\r\n      this.Patient = data;\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQtdXBkYXRlL3BhdGllbnQtdXBkYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RestApiService } from '../shared/service/rest-api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale); \r\n\r\n\r\n@Component({\r\n  selector: 'app-patient-update',\r\n  templateUrl: './patient-update.component.html',\r\n  styleUrls: ['./patient-update.component.css']\r\n})\r\nexport class PatientUpdateComponent implements OnInit {\r\n  datePickerConfig: Partial<BsDatepickerConfig>;\r\n\r\n  eCivils = ['casada', 'divorciada', 'solteira','separada','viúva'];\r\n\r\n  idPaciente = this.actRoute.snapshot.params['id'];\r\n  patient: any = {};\r\n\r\n  constructor(public restApi: RestApiService, public actRoute: ActivatedRoute, \r\n              public router: Router, private localeService: BsLocaleService) {\r\n              this.localeService.use('pt-br');\r\n              this.datePickerConfig = Object.assign({},{\r\n                containerClass:'theme-dark-blue',\r\n                showWeekNumbers: false,\r\n                adaptivePosition: true\r\n              });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.restApi.getPatient(this.idPaciente).subscribe((data: {}) => {\r\n      this.patient = data;\r\n      this.patient.dataNasc = new Date(this.patient.dataNasc);\r\n      this.patient.dum = new Date(this.patient.dum);\r\n      this.patient.dpp = new Date(this.patient.dpp);\r\n    })\r\n  }\r\n\r\n  updatePatient(){\r\n    if(window.confirm('Você tem certeza que deseja alterar os dados desse Paciente?')){\r\n      this.restApi.updatePatient(this.idPaciente, this.patient).subscribe(data => {\r\n        this.router.navigate(['/pacientes-lista'])\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9hZGRyZXNzLWNyZWF0ZS9hZGRyZXNzLWNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AddressCrudService } from '../../shared/service/address-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-address-create',\r\n  templateUrl: './address-create.component.html',\r\n  styleUrls: ['./address-create.component.css']\r\n})\r\nexport class AddressCreateComponent implements OnInit {\r\n\r\n  idPaciente = this.actRoute.snapshot.params['id'];\r\n  @Input() address = {\r\n    cep: '',\r\n    uf: '',\r\n    cidade: '',\r\n    bairro: '',\r\n    rua: '',\r\n    numero: ''\r\n}\r\n\r\nufs = ['AC','AL','AM','AP','BA','CE','DF','ES','GO','MA','MG','MS','MT','PA','PB','PE','PI','PR',\r\n       'RJ','RN','RO','RR','RS','SC','SE','SP','TO'];\r\n\r\n  constructor(\r\n    public restApi: AddressCrudService,\r\n    public actRoute: ActivatedRoute,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  addAddress(dataAddress){\r\n    this.restApi.createAddress(this.idPaciente, this.address).subscribe((data: {}) => {\r\n      this.router.navigate(['/paciente-detalhes/' + this.idPaciente])\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9hZGRyZXNzLXVwZGF0ZS9hZGRyZXNzLXVwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AddressCrudService } from '../../shared/service/address-crud.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-address-update',\r\n  templateUrl: './address-update.component.html',\r\n  styleUrls: ['./address-update.component.css']\r\n})\r\nexport class AddressUpdateComponent implements OnInit {\r\n  patientId = this.actRoute.snapshot.params['id1'];\r\n  addressId = this.actRoute.snapshot.params['id2'];\r\n  address: any = {};\r\n\r\n  ufs = ['AC','AL','AM','AP','BA','CE','DF','ES','GO','MA','MG','MS','MT','PA','PB','PE','PI','PR',\r\n         'RJ','RN','RO','RR','RS','SC','SE','SP','TO'];\r\n  constructor(\r\n    public restApi: AddressCrudService,\r\n    public actRoute: ActivatedRoute,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.restApi.getAddress(this.patientId, this.addressId).subscribe((data: {}) => {\r\n      this.address = data;\r\n    })\r\n  }\r\n  updateAddress(){\r\n    if(window.confirm('Você tem certeza que deseja alterar este Endereço?')){\r\n      this.restApi.updateAddress(this.patientId, this.addressId, this.address).subscribe(data => {\r\n        this.router.navigate(['/paciente-detalhes/' + this.patientId])\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9hcHBvaW50bWVudC1jcmVhdGUvYXBwb2ludG1lbnQtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppointmentCrudService } from '../../shared/service/appointment-crud.service';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale); \r\n\r\n@Component({\r\n  selector: 'app-appointment-create',\r\n  templateUrl: './appointment-create.component.html',\r\n  styleUrls: ['./appointment-create.component.css']\r\n})\r\nexport class AppointmentCreateComponent implements OnInit {\r\n  datePickerConfig: Partial<BsDatepickerConfig>;\r\n\r\n  idPaciente = this.actRoute.snapshot.params['id'];\r\n  @Input() appointment = {\r\n    dataConsulta: '',\r\n    idadeGestacional: '',\r\n    peso: '',\r\n    presArterial: '',\r\n    alturaUterina: '',\r\n    bcf: '',\r\n    edema: '',\r\n    apresFetal: '',\r\n    toque: '',\r\n    obs: ''\r\n  }\r\n  apresFetais = ['Cefálica', 'Pélvica','Transversal'];\r\n\r\n  constructor(public restApi: AppointmentCrudService, public actRoute: ActivatedRoute,\r\n              public router: Router, private localeService: BsLocaleService) {\r\n    this.localeService.use('pt-br');\r\n    this.datePickerConfig = Object.assign({},{\r\n        containerClass:'theme-dark-blue',\r\n        showWeekNumbers: false,\r\n        adaptivePosition: true\r\n      });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  addAppointment(){\r\n    this.restApi.createAppointment(this.idPaciente, this.appointment).subscribe((data: {}) => {\r\n      this.router.navigate(['/paciente-detalhes/' + this.idPaciente])\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".btn-edt-dlt button{\\r\\n    width: 60px;\\r\\n    margin: 5px 5px;\\r\\n}\\r\\n.btn-edt-dlt {\\r\\n    text-align: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZW1lL2FwcG9pbnRtZXQtZGV0YWlscy9hcHBvaW50bWV0LWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9zY2hlbWUvYXBwb2ludG1ldC1kZXRhaWxzL2FwcG9pbnRtZXQtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1lZHQtZGx0IGJ1dHRvbntcclxuICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgbWFyZ2luOiA1cHggNXB4O1xyXG59XHJcbi5idG4tZWR0LWRsdCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppointmentCrudService } from 'src/app/shared/service/appointment-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-appointmet-details',\r\n  templateUrl: './appointmet-details.component.html',\r\n  styleUrls: ['./appointmet-details.component.css']\r\n})\r\nexport class AppointmetDetailsComponent implements OnInit {\r\n  patientId = this.actRoute.snapshot.params['id1'];\r\n  appointmentId = this.actRoute.snapshot.params['id2'];\r\n  appointment: any = {};\r\n\r\n  constructor(\r\n    public appointmentCrud: AppointmentCrudService,\r\n    public actRoute: ActivatedRoute,\r\n    public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.appointmentCrud.getAppointment(this.patientId, this.appointmentId).subscribe((data: {}) => {\r\n      this.appointment = data;\r\n    })\r\n  }\r\n  routeEditAptn(){\r\n    this.router.navigate(['/'+ this.patientId +'/consulta-editar/' + this.appointmentId])\r\n  }\r\n  deleteAptn(aptnId){\r\n    if(window.confirm(\"Você tem certeza que deseja deletar esta Consulta!?\")){\r\n      this.appointmentCrud.deleteAppointment(this.patientId, aptnId).subscribe(data => {\r\n        this.router.navigate(['/paciente-detalhes/' + this.patientId])\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9hcHBvaW50bWV0LXVwZGF0ZS9hcHBvaW50bWV0LXVwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppointmentCrudService } from 'src/app/shared/service/appointment-crud.service';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale); \r\n\r\n@Component({\r\n  selector: 'app-appointmet-update',\r\n  templateUrl: './appointmet-update.component.html',\r\n  styleUrls: ['./appointmet-update.component.css']\r\n})\r\nexport class AppointmetUpdateComponent implements OnInit {\r\n  datePickerConfig: Partial<BsDatepickerConfig>;\r\n\r\n  patientId = this.actRoute.snapshot.params['id1'];\r\n  aptnId = this.actRoute.snapshot.params['id2'];\r\n  appointment: any = {};\r\n  \r\n  apresFetais = ['Cefálica', 'Pélvica','Transversal'];\r\n\r\n  constructor(\r\n    public restApi: AppointmentCrudService,\r\n    public actRoute: ActivatedRoute,\r\n    public router: Router, private localeService: BsLocaleService) {\r\n      this.localeService.use('pt-br');\r\n      this.datePickerConfig = Object.assign({},{\r\n        containerClass:'theme-dark-blue',\r\n        showWeekNumbers: false,\r\n        adaptivePosition: true\r\n      });\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.restApi.getAppointment(this.patientId, this.aptnId).subscribe((data: {}) => {\r\n      this.appointment = data;\r\n      this.appointment.dataConsulta = new Date(this.appointment.dataConsulta);\r\n    })\r\n  }\r\n  updateAptn(){\r\n    if(window.confirm('Você tem certeza que deseja alterar esta Consulta?')){\r\n      this.restApi.updateAppointment(this.patientId, this.aptnId, this.appointment).subscribe(data => {\r\n        this.router.navigate(['/paciente-detalhes/' + this.patientId])\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9leGFtcy1jcmVhdGUvZXhhbXMtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExamsCrudService } from 'src/app/shared/service/exams-crud.service';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale); \r\n\r\n@Component({\r\n  selector: 'app-exam-create',\r\n  templateUrl: './exams-create.component.html',\r\n  styleUrls: ['./exams-create.component.css']\r\n})\r\nexport class ExamsCreateComponent implements OnInit {\r\n  datePickerConfig: Partial<BsDatepickerConfig>;\r\n\r\n  idPaciente = this.actRoute.snapshot.params['id'];\r\n  @Input() exams = {\r\n    aboRh: '',\r\n    dtAboRh: '',\r\n    hemoglobina: '',\r\n    dtHemoglobina: '',\r\n    vdrlHiv: '',\r\n    dtVdrlHiv: '',\r\n    urinaEas: '',\r\n    dtUrinaEas: '',\r\n    citOncotica: '',\r\n    dtCitOncotica: '',    \r\n    glicemia: '',\r\n    dtGlicemia: '',\r\n    sifilis: '',\r\n    dtSifilis: '',    \r\n    hepatite: '',\r\n    dtHepatite: '',\r\n    toxoplasmose: '',\r\n    dtToxopla: '',\r\n    citomegalovirus: '',\r\n    dtCitomega: '',\r\n    \r\n  }\r\n    \r\n\r\n  constructor(public restApi: ExamsCrudService, public actRoute: ActivatedRoute,\r\n              public router: Router, private localeService: BsLocaleService) { \r\n                this.localeService.use('pt-br');\r\n                this.datePickerConfig = Object.assign({},{\r\n                    containerClass:'theme-dark-blue',\r\n                    showWeekNumbers: false,\r\n                    adaptivePosition: true\r\n                  });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  addExams(){\r\n    this.restApi.createExam(this.idPaciente, this.exams).subscribe((data: {}) => {\r\n      this.router.navigate(['/paciente-detalhes/' + this.idPaciente])\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".btn-edt-dlt button{\\r\\n    width: 60px;\\r\\n    margin: 5px 5px;\\r\\n}\\r\\n.btn-edt-dlt {\\r\\n    text-align: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZW1lL2V4YW1zLWRldGFpbHMvZXhhbXMtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9leGFtcy1kZXRhaWxzL2V4YW1zLWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tZWR0LWRsdCBidXR0b257XHJcbiAgICB3aWR0aDogNjBweDtcclxuICAgIG1hcmdpbjogNXB4IDVweDtcclxufVxyXG4uYnRuLWVkdC1kbHQge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExamsCrudService } from 'src/app/shared/service/exams-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-exam-details',\r\n  templateUrl: './exams-details.component.html',\r\n  styleUrls: ['./exams-details.component.css']\r\n})\r\nexport class ExamsDetailsComponent implements OnInit {\r\n  patientId = this.actRoute.snapshot.params['id1'];\r\n  examsId = this.actRoute.snapshot.params['id2'];\r\n  exams: any = {};\r\n\r\n  constructor(\r\n    public examsCrud: ExamsCrudService,\r\n    public actRoute: ActivatedRoute,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.examsCrud.getExam(this.patientId, this.examsId).subscribe((data: {}) => {\r\n      this.exams = data;\r\n    })\r\n  }\r\n  routeEditExams(){\r\n    this.router.navigate(['/'+ this.patientId +'/exames-editar/' + this.examsId])\r\n  }\r\n  deleteExams(examsId){\r\n    if(window.confirm(\"Você tem certeza que deseja deletar esses resultados de Exames!?\")){\r\n      this.examsCrud.deleteExams(this.patientId, examsId).subscribe(data => {\r\n        this.router.navigate(['/paciente-detalhes/' + this.patientId])\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9leGFtcy11cGRhdGUvZXhhbXMtdXBkYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExamsCrudService } from 'src/app/shared/service/exams-crud.service';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\n\r\ndefineLocale('pt-br', ptBrLocale); \r\n\r\n@Component({\r\n  selector: 'app-exam-update',\r\n  templateUrl: './exams-update.component.html',\r\n  styleUrls: ['./exams-update.component.css']\r\n})\r\nexport class ExamsUpdateComponent implements OnInit {\r\n  datePickerConfig: Partial<BsDatepickerConfig>;\r\n\r\n  patientId = this.actRoute.snapshot.params['id1'];\r\n  examsId = this.actRoute.snapshot.params['id2'];\r\n  exams: any = {};\r\n\r\n  constructor(public restApi: ExamsCrudService, public actRoute: ActivatedRoute,\r\n              public router: Router, private localeService: BsLocaleService) {\r\n              this.localeService.use('pt-br');\r\n              this.datePickerConfig = Object.assign({},{\r\n                containerClass:'theme-dark-blue',\r\n                showWeekNumbers: false,\r\n                adaptivePosition: true\r\n              });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.restApi.getExam(this.patientId, this.examsId).subscribe((data: {}) => {\r\n      this.exams = data;\r\n      \r\n      this.exams.dtHemoglobina = new Date(this.exams.dtHemoglobina);\r\n      this.exams.dtGlicemia = new Date(this.exams.dtGlicemia);\r\n      this.exams.dtUrinaEas = new Date(this.exams.dtUrinaEas);\r\n\r\n      if(this.exams.dtAboRh){this.exams.dtAboRh = new Date(this.exams.dtAboRh);}\r\n      if(this.exams.dtVdrlHiv){this.exams.dtVdrlHiv = new Date(this.exams.dtVdrlHiv);}\r\n      if(this.exams.dtCitOncotica){this.exams.dtCitOncotica = new Date(this.exams.dtCitOncotica);}\r\n      if(this.exams.dtSifilis){this.exams.dtSifilis = new Date(this.exams.dtSifilis);}\r\n      if(this.exams.dtHepatite){this.exams.dtHepatite = new Date(this.exams.dtHepatite);}\r\n      if(this.exams.dtToxopla){this.exams.dtToxopla = new Date(this.exams.dtToxopla);}\r\n      if(this.exams.dtCitomega){this.exams.dtCitomega = new Date(this.exams.dtCitomega);}\r\n    })\r\n  }\r\n  updateExams(){\r\n    if(window.confirm('Você tem certeza que deseja alterar os dados desses Exames?')){\r\n      this.restApi.updateExams(this.patientId, this.examsId, this.exams).subscribe(data => {\r\n        this.router.navigate(['/paciente-detalhes/' + this.patientId])\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"@media only screen and (max-width: 375px) {\\r\\n    .input-login {width: 20px;\\r\\n    }\\r\\n  }\\r\\n.btn-cadastro{\\r\\n    margin-left: 20px;\\r\\n}\\r\\n.input-login{\\r\\n    width: 340px;\\r\\n    margin: 15px auto;\\r\\n}\\r\\n.input-login button{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZW1lL2xvZ2luL3NpZ25pbi9zaWduaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWMsV0FBVztJQUN6QjtFQUNGO0FBQ0Y7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9sb2dpbi9zaWduaW4vc2lnbmluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XHJcbiAgICAuaW5wdXQtbG9naW4ge3dpZHRoOiAyMHB4O1xyXG4gICAgfVxyXG4gIH1cclxuLmJ0bi1jYWRhc3Ryb3tcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59XHJcbi5pbnB1dC1sb2dpbntcclxuICAgIHdpZHRoOiAzNDBweDtcclxuICAgIG1hcmdpbjogMTVweCBhdXRvO1xyXG59XHJcbi5pbnB1dC1sb2dpbiBidXR0b257XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../../../shared/auth/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n    ) {\r\n      // redirect to home if already logged in\r\n      if (this.authenticationService.currentUserValue) { \r\n        this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      usernameOrEmail: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n  // get return url from route parameters or default to '/'\r\n  this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit(){\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService.login(this.f.usernameOrEmail.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                },\r\n                error => {\r\n                    this.error = error;\r\n                    this.loading = false;\r\n                });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".input-signup{\\r\\n    width: 340px;\\r\\n    margin: 10px auto;\\r\\n}\\r\\n.input-signup button{\\r\\n    margin: 0 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZW1lL2xvZ2luL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9zY2hlbWUvbG9naW4vc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlucHV0LXNpZ251cHtcclxuICAgIHdpZHRoOiAzNDBweDtcclxuICAgIG1hcmdpbjogMTBweCBhdXRvO1xyXG59XHJcbi5pbnB1dC1zaWdudXAgYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDEwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserCrudService } from '../../../shared/service/user-crud.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  @Input() user = {\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword : ''\r\n  }\r\n  \r\n  sucesso = '';\r\n  error = '';\r\n  erroSenha = '';\r\n  \r\n\r\n constructor(public restApi: UserCrudService, public actRoute: ActivatedRoute, public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.error = '';\r\n    this.erroSenha = '';\r\n    this.sucesso = '';\r\n  }\r\n\r\n  addUser(){\r\n    this.restApi.createUser(this.user).subscribe(\r\n      (data: {}) => {\r\n        this.error = '';\r\n        this.erroSenha = '';\r\n        this.sucesso = \"Cadastro Realizado com Sucesso!\";\r\n      },\r\n    error => {\r\n      this.sucesso = '';\r\n      this.error = error;\r\n    })\r\n  }\r\n  validaSenha(){\r\n    if(this.user.password != this.user.confirmPassword){\r\n      this.error = '';\r\n      this.erroSenha = 'Os campos Senha e Confirmar Senha não conferem';\r\n    } else{\r\n      this.erroSenha = '';\r\n      this.addUser();\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVtZS9wYWdlLW5vdC1mb3VuZC9wYWdlLW5vdC1mb3VuZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserLogin } from '../model/user-login';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  private currentUserSubject: BehaviorSubject<UserLogin>;\r\n  public currentUser: Observable<UserLogin>;\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.currentUserSubject = new BehaviorSubject<UserLogin>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): UserLogin {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(usernameOrEmail: string, password: string) {\r\n    return this.http.post<any>(`${environment.apiUrl}/api/auth/signin`, { usernameOrEmail, password })\r\n        .pipe(map(user => {\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n            this.currentUserSubject.next(user);\r\n            return user;\r\n        }));\r\n  }\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.accessToken) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.accessToken}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Endereco } from '../model/endereco';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressCrudService {\r\n  // API\r\n  apiURL = \"http://localhost:9898\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json;'\r\n    })\r\n  }\r\n  createAddress(idPaciente, address): Observable<Endereco> {\r\n    return this.http.post<Endereco>(this.apiURL + '/api/pacientes/' + idPaciente + '/endereco', JSON.stringify(address), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  getAddresses(idPaciente): Observable<Endereco>{\r\n    return this.http.get<Endereco>(this.apiURL + '/api/pacientes/' + idPaciente + '/endereco')\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  getAddress(idPaciente, idAddress): Observable<Endereco>{\r\n    return this.http.get<Endereco>(this.apiURL + '/api/pacientes/' + idPaciente + '/endereco/' + idAddress)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  deleteAddress(idPacient, idAddress): Observable<Endereco>{\r\n    return this.http.delete<Endereco>(this.apiURL + '/api/pacientes/' + idPacient + '/endereco/' + idAddress, this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  updateAddress(idPacient, idAddress, address): Observable<Endereco> {\r\n    return this.http.put<Endereco>(this.apiURL + '/api/pacientes/' + idPacient + '/endereco/' + idAddress, JSON.stringify(address), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse){\r\n    window.alert(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Appointment } from '../model/appointment';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentCrudService {\r\n  // API\r\n  apiURL = \"http://localhost:9898\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json;'\r\n    })\r\n  }\r\n\r\n  createAppointment(idPaciente, appointment): Observable<Appointment> {\r\n    return this.http.post<Appointment>(this.apiURL + '/api/pacientes/' + idPaciente + '/consultas', JSON.stringify(appointment), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  getAppointments(idPaciente): Observable<Appointment>{\r\n    return this.http.get<Appointment>(this.apiURL + '/api/pacientes/' + idPaciente + '/consultas')\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  getAppointment(idPaciente, idAppointment): Observable<Appointment>{\r\n    return this.http.get<Appointment>(this.apiURL + '/api/pacientes/' + idPaciente + '/consultas/' + idAppointment)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  deleteAppointment(idPacient, idAppointment): Observable<Appointment>{\r\n    return this.http.delete<Appointment>(this.apiURL + '/api/pacientes/' + idPacient + '/consultas/' + idAppointment, this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  updateAppointment(idPacient, idAppointment, appointment): Observable<Appointment> {\r\n    return this.http.put<Appointment>(this.apiURL + '/api/pacientes/' + idPacient + '/consultas/' + idAppointment, JSON.stringify(appointment), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse){\r\n    window.alert(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Exams } from '../model/exams';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExamsCrudService {\r\n\r\n  apiURL = \"http://localhost:9898\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json;'\r\n    })\r\n  }\r\n  createExam(idPaciente, exams): Observable<Exams> {\r\n    return this.http.post<Exams>(this.apiURL + '/api/pacientes/' + idPaciente + '/exames', JSON.stringify(exams), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  getExams(idPaciente): Observable<Exams>{\r\n    return this.http.get<Exams>(this.apiURL + '/api/pacientes/' + idPaciente + '/exames')\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  getExam(idPaciente, idExams): Observable<Exams>{\r\n    return this.http.get<Exams>(this.apiURL + '/api/pacientes/' + idPaciente + '/exames/' + idExams)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  deleteExams(idPacient, idExams): Observable<Exams>{\r\n    return this.http.delete<Exams>(this.apiURL + '/api/pacientes/' + idPacient + '/exames/' + idExams, this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  updateExams(idPacient, idExams, exams): Observable<Exams> {\r\n    return this.http.put<Exams>(this.apiURL + '/api/pacientes/' + idPacient + '/exames/' + idExams, JSON.stringify(exams), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse){\r\n    window.alert(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Paciente } from '../model/paciente';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestApiService {\r\n  \r\n  // API\r\n  apiURL = \"http://localhost:9898\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json;'\r\n    })\r\n  }\r\n\r\n  getPatients(): Observable<Paciente>{\r\n    return this.http.get<Paciente>(this.apiURL + '/api/pacientes')\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  getPatient(idPaciente): Observable<Paciente>{\r\n    return this.http.get<Paciente>(this.apiURL + '/api/pacientes/' + idPaciente)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  createPatient(patient): Observable<Paciente> {\r\n    return this.http.post<Paciente>(this.apiURL + '/api/pacientes', JSON.stringify(patient), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  updatePatient(id, patient): Observable<Paciente> {\r\n    return this.http.put<Paciente>(this.apiURL + '/api/pacientes/' + id, JSON.stringify(patient), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n  deletePatient(idPaciente): Observable<Paciente> {\r\n    return this.http.delete<Paciente>(this.apiURL + '/api/pacientes/' + idPaciente, this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse){\r\n    window.alert(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { User } from '../model/user';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserCrudService {\r\n\r\n    // API\r\n    apiURL = \"http://localhost:9898\";\r\n    constructor(private http: HttpClient) { }\r\n\r\n   // Http Options\r\n   httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json;'\r\n    })\r\n  }\r\n\r\n\r\n  createUser(user): Observable<User> {\r\n    return this.http.post<User>(this.apiURL + '/api/auth/signup', JSON.stringify(user), this.httpOptions)\r\n    .pipe(\r\n      retry(1), catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse){\r\n    return throwError(error);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:9898'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}